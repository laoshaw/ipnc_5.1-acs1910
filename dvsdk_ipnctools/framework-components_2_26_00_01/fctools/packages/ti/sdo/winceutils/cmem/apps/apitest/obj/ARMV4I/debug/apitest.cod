; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	I:\library\trees\winceutils\winceutils-b01x\src\ti\sdo\winceutils\cmem\apps\apitest\apitest.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_04MJHCKDHM@1024?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_0BC@KMKLDNNJ@apitest_wince?4exe?$AA@| [ DATA ] ; `string'
	EXPORT	|ARGC| [ DATA ]
	EXPORT	|ARGV| [ DATA ]

  00000			 AREA	 |.data|, DATA
	 COMMON	|heap_ptrs|, 0x4000


  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_04MJHCKDHM@1024?$AA@| DCB "1024", 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BC@KMKLDNNJ@apitest_wince?4exe?$AA@| DCB "apitest_wince.exe", 0x0 ; `string'

  00000			 AREA	 |.data|, DATA
|ARGC|	DCD	0x2
|ARGV|	DCD	|??_C@_0BC@KMKLDNNJ@apitest_wince?4exe?$AA@|
	DCD	|??_C@_04MJHCKDHM@1024?$AA@|
	EXPORT	|??_C@_1CK@EKFKJOAO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@JGGCDFCC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@LJLCIILN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AA?9?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@NOABKNPO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MIKINHML@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BKPLHBGB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?4@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@JENCBDEO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@JOPMKKAN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@CMLBLJDM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAu?$AAf?$AAf@| [ DATA ] ; `string'
	EXPORT	|testHeap|
	IMPORT	|CMEM_free|
	IMPORT	|getchar|
	IMPORT	|CMEM_alloc2|
	IMPORT	|NKDbgPrintfW|

  00000			 AREA	 |.pdata|, PDATA
|$T36826| DCD	|$LN20@testHeap|
	DCD	0x4000a904
; File i:\library\trees\winceutils\winceutils-b01x\src\ti\sdo\winceutils\cmem\apps\apitest\apitest.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EKFKJOAO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, "d", 0x0, "o", 0x0, "n", 0x0, "e"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@JGGCDFCC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, "d", 0x0, "o", 0x0, "n", 0x0, "e"
	DCB	0x0, ",", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "e", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "h", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "s", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@LJLCIILN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AA?9?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "-", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "h", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@NOABKNPO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MIKINHML@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BKPLHBGB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?4@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@JENCBDEO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAi@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "P"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "E"
	DCB	0x0, "N", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "("
	DCB	0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "'", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, " ", 0x0, "/"
	DCB	0x0, "p", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "/", 0x0, "c"
	DCB	0x0, "m", 0x0, "e", 0x0, "m", 0x0, "'", 0x0, " ", 0x0, "i"
	DCB	0x0, "f", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, "i"
	DCB	0x0, "r", 0x0, "e", 0x0, "d", 0x0, ")", 0x0, ".", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@JOPMKKAN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, "d", 0x0, "o", 0x0, "n", 0x0, "e"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@CMLBLJDM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAu?$AAf?$AAf@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "h", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "C", 0x0, "M"
	DCB	0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "b", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |testHeap| PROC

; 64   : {

  00000		 |$LN20@testHeap|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd028	 sub         sp, sp, #0x28
  00010		 |$M36823|

; 65   :     int rv;
; 66   :     int num_buffers;
; 67   :     int i;
; 68   :     CMEM_AllocParams params;
; 69   : 
; 70   :     __D("allocating heap buffers from CMEM memory block %d...\n", block);

  00010	e59d1034	 ldr         r1, [sp, #0x34]
  00014	e59f0284	 ldr         r0, [pc, #0x284]
  00018	eb000000	 bl          NKDbgPrintfW

; 71   :     num_buffers = 0;

  0001c	e3a03000	 mov         r3, #0
  00020	e58d3010	 str         r3, [sp, #0x10]

; 72   :     params.type = CMEM_HEAP;

  00024	e3a03b01	 mov         r3, #1, 22
  00028	e58d3004	 str         r3, [sp, #4]

; 73   :     params.flags = CMEM_NONCACHED;

  0002c	e3a03000	 mov         r3, #0
  00030	e58d3008	 str         r3, [sp, #8]

; 74   :     params.alignment = 0;

  00034	e3a03000	 mov         r3, #0
  00038	e58d300c	 str         r3, [sp, #0xC]
  0003c		 |$LN15@testHeap|

; 75   :     while (num_buffers < NUMHEAPPTRS) {

  0003c	e59d3010	 ldr         r3, [sp, #0x10]
  00040	e3530a01	 cmp         r3, #1, 20
  00044	aa000018	 bge         |$LN14@testHeap|

; 76   :         heap_ptrs[num_buffers] = CMEM_alloc2(block, size, &params);

  00048	e28d2004	 add         r2, sp, #4
  0004c	e59d1030	 ldr         r1, [sp, #0x30]
  00050	e59d0034	 ldr         r0, [sp, #0x34]
  00054	eb000000	 bl          CMEM_alloc2
  00058	e58d0018	 str         r0, [sp, #0x18]
  0005c	e59d1010	 ldr         r1, [sp, #0x10]
  00060	e3a03004	 mov         r3, #4
  00064	e0020391	 mul         r2, r1, r3
  00068	e59f3214	 ldr         r3, [pc, #0x214]
  0006c	e0832002	 add         r2, r3, r2
  00070	e59d3018	 ldr         r3, [sp, #0x18]
  00074	e5823000	 str         r3, [r2]

; 77   :         if (heap_ptrs[num_buffers] == NULL) {

  00078	e59d1010	 ldr         r1, [sp, #0x10]
  0007c	e3a03004	 mov         r3, #4
  00080	e0020391	 mul         r2, r1, r3
  00084	e59f31f8	 ldr         r3, [pc, #0x1F8]
  00088	e0833002	 add         r3, r3, r2
  0008c	e5933000	 ldr         r3, [r3]
  00090	e3530000	 cmp         r3, #0
  00094	1a000000	 bne         |$LN13@testHeap|

; 78   :             break;

  00098	ea000003	 b           |$LN14@testHeap|
  0009c		 |$LN13@testHeap|

; 79   :         }
; 80   :         num_buffers++;

  0009c	e59d3010	 ldr         r3, [sp, #0x10]
  000a0	e2833001	 add         r3, r3, #1
  000a4	e58d3010	 str         r3, [sp, #0x10]

; 81   :     }

  000a8	eaffffe3	 b           |$LN15@testHeap|
  000ac		 |$LN14@testHeap|

; 82   :     __D("...done, %d allocated\n", num_buffers);

  000ac	e59d1010	 ldr         r1, [sp, #0x10]
  000b0	e59f01e4	 ldr         r0, [pc, #0x1E4]
  000b4	eb000000	 bl          NKDbgPrintfW

; 83   : 
; 84   :     __D("Press ENTER to continue (after 'cat /proc/cmem' if desired).\n");

  000b8	e59f01d8	 ldr         r0, [pc, #0x1D8]
  000bc	eb000000	 bl          NKDbgPrintfW

; 85   :     getchar();

  000c0	eb000000	 bl          getchar

; 86   : 
; 87   :     __D("freeing heap blocks...\n");

  000c4	e59f01c8	 ldr         r0, [pc, #0x1C8]
  000c8	eb000000	 bl          NKDbgPrintfW

; 88   :     for (i = 0; i < num_buffers; i++) {

  000cc	e3a03000	 mov         r3, #0
  000d0	e58d3000	 str         r3, [sp]
  000d4	ea000002	 b           |$LN12@testHeap|
  000d8		 |$LN11@testHeap|
  000d8	e59d3000	 ldr         r3, [sp]
  000dc	e2833001	 add         r3, r3, #1
  000e0	e58d3000	 str         r3, [sp]
  000e4		 |$LN12@testHeap|
  000e4	e59d2000	 ldr         r2, [sp]
  000e8	e59d3010	 ldr         r3, [sp, #0x10]
  000ec	e1520003	 cmp         r2, r3
  000f0	aa000018	 bge         |$LN10@testHeap|

; 89   :         rv = CMEM_free(heap_ptrs[i], &params);

  000f4	e28d1004	 add         r1, sp, #4
  000f8	e59d0000	 ldr         r0, [sp]
  000fc	e3a03004	 mov         r3, #4
  00100	e0020390	 mul         r2, r0, r3
  00104	e59f3178	 ldr         r3, [pc, #0x178]
  00108	e0833002	 add         r3, r3, r2
  0010c	e5930000	 ldr         r0, [r3]
  00110	eb000000	 bl          CMEM_free
  00114	e58d001c	 str         r0, [sp, #0x1C]
  00118	e59d301c	 ldr         r3, [sp, #0x1C]
  0011c	e58d3014	 str         r3, [sp, #0x14]

; 90   :         if (rv < 0) {

  00120	e59d3014	 ldr         r3, [sp, #0x14]
  00124	e3530000	 cmp         r3, #0
  00128	aa000002	 bge         |$LN9@testHeap|

; 91   :             __D("error freeing blocks\n");

  0012c	e59f014c	 ldr         r0, [pc, #0x14C]
  00130	eb000000	 bl          NKDbgPrintfW

; 92   :             break;

  00134	ea000007	 b           |$LN10@testHeap|
  00138		 |$LN9@testHeap|

; 93   :         }
; 94   :         heap_ptrs[i] = NULL;

  00138	e59d1000	 ldr         r1, [sp]
  0013c	e3a03004	 mov         r3, #4
  00140	e0020391	 mul         r2, r1, r3
  00144	e59f3138	 ldr         r3, [pc, #0x138]
  00148	e0832002	 add         r2, r3, r2
  0014c	e3a03000	 mov         r3, #0
  00150	e5823000	 str         r3, [r2]

; 95   :     }

  00154	eaffffdf	 b           |$LN11@testHeap|
  00158		 |$LN10@testHeap|

; 96   : 
; 97   :     /* make sure we can still allocate num_buffers after freeing */
; 98   :     __D("allocating %d heap blocks...\n", num_buffers);

  00158	e59d1010	 ldr         r1, [sp, #0x10]
  0015c	e59f012c	 ldr         r0, [pc, #0x12C]
  00160	eb000000	 bl          NKDbgPrintfW

; 99   :     for (i = 0; i < num_buffers; i++) {

  00164	e3a03000	 mov         r3, #0
  00168	e58d3000	 str         r3, [sp]
  0016c	ea000002	 b           |$LN8@testHeap|
  00170		 |$LN7@testHeap|
  00170	e59d3000	 ldr         r3, [sp]
  00174	e2833001	 add         r3, r3, #1
  00178	e58d3000	 str         r3, [sp]
  0017c		 |$LN8@testHeap|
  0017c	e59d2000	 ldr         r2, [sp]
  00180	e59d3010	 ldr         r3, [sp, #0x10]
  00184	e1520003	 cmp         r2, r3
  00188	aa000018	 bge         |$LN6@testHeap|

; 100  :         heap_ptrs[i] = CMEM_alloc2(block, size, &params);

  0018c	e28d2004	 add         r2, sp, #4
  00190	e59d1030	 ldr         r1, [sp, #0x30]
  00194	e59d0034	 ldr         r0, [sp, #0x34]
  00198	eb000000	 bl          CMEM_alloc2
  0019c	e58d0020	 str         r0, [sp, #0x20]
  001a0	e59d1000	 ldr         r1, [sp]
  001a4	e3a03004	 mov         r3, #4
  001a8	e0020391	 mul         r2, r1, r3
  001ac	e59f30d0	 ldr         r3, [pc, #0xD0]
  001b0	e0832002	 add         r2, r3, r2
  001b4	e59d3020	 ldr         r3, [sp, #0x20]
  001b8	e5823000	 str         r3, [r2]

; 101  :         if (heap_ptrs[i] == NULL) {

  001bc	e59d1000	 ldr         r1, [sp]
  001c0	e3a03004	 mov         r3, #4
  001c4	e0020391	 mul         r2, r1, r3
  001c8	e59f30b4	 ldr         r3, [pc, #0xB4]
  001cc	e0833002	 add         r3, r3, r2
  001d0	e5933000	 ldr         r3, [r3]
  001d4	e3530000	 cmp         r3, #0
  001d8	1a000003	 bne         |$LN5@testHeap|

; 102  :             __D("error re-allocating %d heap blocks\n", num_buffers);

  001dc	e59d1010	 ldr         r1, [sp, #0x10]
  001e0	e59f00a4	 ldr         r0, [pc, #0xA4]
  001e4	eb000000	 bl          NKDbgPrintfW

; 103  :             break;

  001e8	ea000000	 b           |$LN6@testHeap|
  001ec		 |$LN5@testHeap|

; 104  :         }
; 105  :     }

  001ec	eaffffdf	 b           |$LN7@testHeap|
  001f0		 |$LN6@testHeap|

; 106  :     __D("...done, freeing heap blocks...\n");

  001f0	e59f0090	 ldr         r0, [pc, #0x90]
  001f4	eb000000	 bl          NKDbgPrintfW

; 107  :     for (i = 0; i < num_buffers; i++) {

  001f8	e3a03000	 mov         r3, #0
  001fc	e58d3000	 str         r3, [sp]
  00200	ea000002	 b           |$LN4@testHeap|
  00204		 |$LN3@testHeap|
  00204	e59d3000	 ldr         r3, [sp]
  00208	e2833001	 add         r3, r3, #1
  0020c	e58d3000	 str         r3, [sp]
  00210		 |$LN4@testHeap|
  00210	e59d2000	 ldr         r2, [sp]
  00214	e59d3010	 ldr         r3, [sp, #0x10]
  00218	e1520003	 cmp         r2, r3
  0021c	aa000011	 bge         |$LN2@testHeap|

; 108  :         rv = CMEM_free(heap_ptrs[i], &params);

  00220	e28d1004	 add         r1, sp, #4
  00224	e59d0000	 ldr         r0, [sp]
  00228	e3a03004	 mov         r3, #4
  0022c	e0020390	 mul         r2, r0, r3
  00230	e59f304c	 ldr         r3, [pc, #0x4C]
  00234	e0833002	 add         r3, r3, r2
  00238	e5930000	 ldr         r0, [r3]
  0023c	eb000000	 bl          CMEM_free
  00240	e58d0024	 str         r0, [sp, #0x24]
  00244	e59d3024	 ldr         r3, [sp, #0x24]
  00248	e58d3014	 str         r3, [sp, #0x14]

; 109  :         if (rv < 0) {

  0024c	e59d3014	 ldr         r3, [sp, #0x14]
  00250	e3530000	 cmp         r3, #0
  00254	aa000002	 bge         |$LN1@testHeap|

; 110  :             __D("error freeing blocks\n");

  00258	e59f0020	 ldr         r0, [pc, #0x20]
  0025c	eb000000	 bl          NKDbgPrintfW

; 111  :             break;

  00260	ea000000	 b           |$LN2@testHeap|
  00264		 |$LN1@testHeap|

; 112  :         }
; 113  :     }

  00264	eaffffe6	 b           |$LN3@testHeap|
  00268		 |$LN2@testHeap|

; 114  : 
; 115  :     __D("...done\n");

  00268	e59f000c	 ldr         r0, [pc, #0xC]
  0026c	eb000000	 bl          NKDbgPrintfW

; 116  : }

  00270	e28dd028	 add         sp, sp, #0x28
  00274	e89d6000	 ldmia       sp, {sp, lr}
  00278	e12fff1e	 bx          lr
  0027c		 |$LN21@testHeap|
  0027c		 |$LN22@testHeap|
  0027c	00000000	 DCD         |??_C@_1CK@EKFKJOAO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?6?$AA?$AA@|
  00280		 |$LN23@testHeap|
  00280	00000000	 DCD         |??_C@_1EE@MIKINHML@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs@|
  00284		 |$LN24@testHeap|
  00284	00000000	 DCD         |heap_ptrs|
  00288		 |$LN25@testHeap|
  00288	00000000	 DCD         |??_C@_1FK@JGGCDFCC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa@|
  0028c		 |$LN26@testHeap|
  0028c	00000000	 DCD         |??_C@_1GA@LJLCIILN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AA?9?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5@|
  00290		 |$LN27@testHeap|
  00290	00000000	 DCD         |??_C@_1FE@NOABKNPO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb@|
  00294		 |$LN28@testHeap|
  00294	00000000	 DCD         |??_C@_1EI@BKPLHBGB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?4@|
  00298		 |$LN29@testHeap|
  00298	00000000	 DCD         |??_C@_1JE@JENCBDEO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAi@|
  0029c		 |$LN30@testHeap|
  0029c	00000000	 DCD         |??_C@_1EG@JOPMKKAN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@|
  002a0		 |$LN31@testHeap|
  002a0	00000000	 DCD         |??_C@_1IE@CMLBLJDM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAu?$AAf?$AAf@|
  002a4		 |$M36824|

			 ENDP  ; |testHeap|

	EXPORT	|??_C@_1FO@LOGJMALI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@LIHDMFNK@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAr?$AAe?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@FJCHNFB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@FHFEDGIC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAs?$AAo?$AA?5?$AAl?$AAo?$AAo?$AAk?$AA?5?$AAa?$AAt?$AA?5?$AAy?$AAo?$AAu?$AAr?$AA?5?$AAp?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@GJPGAMJC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAt?$AAh?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@EIIBBOGD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@BGHLODNO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAe?$AAc?$AAo?$AAn?$AAd?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@LCMIHFBH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAi?$AAn?$AAv?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc?$AAh?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@NODFGNKJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAw?$AAr?$AAo?$AAt?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAt?$AAo?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@NPCGMDIJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAf?$AAl?$AAu?$AAs?$AAh?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@HONHKAHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@HBIBOILM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@CMKGCONF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@EPPOJJHN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAM?$AAe?$AAa?$AAs?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAp?$AAe?$AAr?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@DMOBBDFE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@CBOCBED@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAc?$AAa?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@GLDDPKCO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAo?$AAf?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@GCDNPCNE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@PNAMJAEN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@HKKKOAAM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@BPOMFHKH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|testCache|
	IMPORT	|CMEM_allocPool|
	IMPORT	|CMEM_getPool|
	IMPORT	|CMEM_cacheInv|
	IMPORT	|CMEM_DEFAULTPARAMS|
	IMPORT	|CMEM_getPhys|
	IMPORT	|CMEM_alloc|
	IMPORT	|memcpy|
	IMPORT	|__imp___rt_udiv|

  00008			 AREA	 |.pdata|, PDATA
|$T36851| DCD	|$LN46@testCache|
	DCD	0x4001f004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@LOGJMALI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAb@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l", 0x0, "y", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "a", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "#"
	DCB	0x0, "x", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@LIHDMFNK@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAr?$AAe?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "e"
	DCB	0x0, "e", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "%", 0x0, "#", 0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@FJCHNFB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "P"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "E"
	DCB	0x0, "N", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, "(", 0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "'", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, " ", 0x0, "/", 0x0, "p", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "/", 0x0, "c", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "'"
	DCB	0x0, " ", 0x0, "i", 0x0, "f", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "s", 0x0, "i", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, ")"
	DCB	0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@FHFEDGIC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAs?$AAo?$AA?5?$AAl?$AAo?$AAo?$AAk?$AA?5?$AAa?$AAt?$AA?5?$AAy?$AAo?$AAu?$AAr?$AA?5?$AAp?$AAo@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "s", 0x0, "o", 0x0, " ", 0x0, "l", 0x0, "o"
	DCB	0x0, "o", 0x0, "k", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "y", 0x0, "o", 0x0, "u", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "f", 0x0, "o", 0x0, " ", 0x0, "u", 0x0, "n", 0x0, "d"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "/", 0x0, "p", 0x0, "r"
	DCB	0x0, "o", 0x0, "c", 0x0, "/", 0x0, "c", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@GJPGAMJC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAt?$AAh?$AAa?$AAt@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "G"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "a"
	DCB	0x0, "t", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "t", 0x0, "s"
	DCB	0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@EIIBBOGD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "a", 0x0, " ", 0x0, "p", 0x0, "o", 0x0, "o"
	DCB	0x0, "l", 0x0, " ", 0x0, "w", 0x0, "h", 0x0, "i", 0x0, "c"
	DCB	0x0, "h", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "t", 0x0, "s"
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@BGHLODNO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAe?$AAc?$AAo?$AAn?$AAd?$AA?5?$AAb?$AAu@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "c", 0x0, "o", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@LCMIHFBH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAi?$AAn?$AAv?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc?$AAh?$AAe@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "-", 0x0, "i", 0x0, "n"
	DCB	0x0, "v", 0x0, " ", 0x0, "*", 0x0, "p", 0x0, "t", 0x0, "r"
	DCB	0x0, "1", 0x0, "_", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@NODFGNKJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAw?$AAr?$AAo?$AAt?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAt?$AAo?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "w"
	DCB	0x0, "r", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "*", 0x0, "p", 0x0, "t", 0x0, "r", 0x0, "1"
	DCB	0x0, "_", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@NPCGMDIJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAf?$AAl?$AAu?$AAs?$AAh?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "-", 0x0, "f", 0x0, "l"
	DCB	0x0, "u", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, "*", 0x0, "p"
	DCB	0x0, "t", 0x0, "r", 0x0, "1", 0x0, "_", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@HONHKAHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "%", 0x0, "p", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@HBIBOILM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "-", 0x0, "M", 0x0, "-", 0x0, "W", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "%", 0x0, "l", 0x0, "x", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@CMKGCONF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "-", 0x0, "M", 0x0, "-", 0x0, "W", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "n", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "%", 0x0, "l"
	DCB	0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@EPPOJJHN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAM?$AAe?$AAa?$AAs?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAp?$AAe?$AAr?$AAf@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "M"
	DCB	0x0, "e", 0x0, "a", 0x0, "s", 0x0, "u", 0x0, "r", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "R", 0x0, "-", 0x0, "M"
	DCB	0x0, "-", 0x0, "W", 0x0, " ", 0x0, "p", 0x0, "e", 0x0, "r"
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "(", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "h", 0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "e", 0x0, " ", 0x0, "q", 0x0, "u", 0x0, "i"
	DCB	0x0, "c", 0x0, "k", 0x0, "e", 0x0, "r", 0x0, ")", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@DMOBBDFE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "n", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "s", 0x0, "o", 0x0, "u", 0x0, "r", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@CBOCBED@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAc?$AAa?$AAc@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "r", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@GLDDPKCO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAo?$AAf?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "i", 0x0, "c", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "o", 0x0, "f"
	DCB	0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "#", 0x0, "x"
	DCB	0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@GCDNPCNE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "a", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "o", 0x0, "f", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "%", 0x0, "#"
	DCB	0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@PNAMJAEN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "o", 0x0, "f"
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "#", 0x0, "x", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HKKKOAAM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAb@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@BPOMFHKH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAn@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "r", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "n", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  002a4			 AREA	 |.text|, CODE, ARM

  002a4		 |testCache| PROC

; 119  : {

  002a4		 |$LN46@testCache|
  002a4	e1a0c00d	 mov         r12, sp
  002a8	e92d0003	 stmdb       sp!, {r0, r1}
  002ac	e92d5000	 stmdb       sp!, {r12, lr}
  002b0	e24dd074	 sub         sp, sp, #0x74
  002b4		 |$M36848|

; 120  :     unsigned int *ptr1_nocache = NULL;

  002b4	e3a03000	 mov         r3, #0
  002b8	e58d3014	 str         r3, [sp, #0x14]

; 121  :     unsigned int *ptr1_cache = NULL;

  002bc	e3a03000	 mov         r3, #0
  002c0	e58d300c	 str         r3, [sp, #0xC]

; 122  :     unsigned int *ptr1_dma = NULL;

  002c4	e3a03000	 mov         r3, #0
  002c8	e58d3008	 str         r3, [sp, #8]

; 123  :     unsigned int *ptr2 = NULL;

  002cc	e3a03000	 mov         r3, #0
  002d0	e58d3038	 str         r3, [sp, #0x38]

; 124  :     unsigned long physp;
; 125  :     unsigned long physp_dma;
; 126  :     unsigned long physp_nocache;
; 127  :     unsigned long physp_cache;
; 128  :     int poolid;
; 129  :     int i, j;
; 130  : //    struct timeval start_tv, end_tv;
; 131  : //    unsigned long diff;
; 132  :     int foo, bar;
; 133  :     CMEM_AllocParams params;
; 134  : 
; 135  :     __D("Allocating first noncached buffer.\n");

  002d4	e59f0784	 ldr         r0, [pc, #0x784]
  002d8	eb000000	 bl          NKDbgPrintfW

; 136  : 
; 137  :     /* First allocate a buffer from the pool that best fits */
; 138  :     ptr1_nocache = CMEM_alloc(size, NULL);

  002dc	e3a01000	 mov         r1, #0
  002e0	e59d007c	 ldr         r0, [sp, #0x7C]
  002e4	eb000000	 bl          CMEM_alloc
  002e8	e58d0040	 str         r0, [sp, #0x40]
  002ec	e59d3040	 ldr         r3, [sp, #0x40]
  002f0	e58d3014	 str         r3, [sp, #0x14]

; 139  : 
; 140  :     if (ptr1_nocache == NULL) {

  002f4	e59d3014	 ldr         r3, [sp, #0x14]
  002f8	e3530000	 cmp         r3, #0
  002fc	1a000003	 bne         |$LN41@testCache|

; 141  :         __D("Failed to allocate buffer of size %d\n", size);

  00300	e59d107c	 ldr         r1, [sp, #0x7C]
  00304	e59f0714	 ldr         r0, [pc, #0x714]
  00308	eb000000	 bl          NKDbgPrintfW

; 142  :         goto cleanup;

  0030c	ea000178	 b           |$cleanup$36645|
  00310		 |$LN41@testCache|

; 143  :     }
; 144  : 
; 145  :     __D("Allocated buffer of size %d at address %#x.\n", size,
; 146  :            (unsigned int) ptr1_nocache);

  00310	e59d2014	 ldr         r2, [sp, #0x14]
  00314	e59d107c	 ldr         r1, [sp, #0x7C]
  00318	e59f06fc	 ldr         r0, [pc, #0x6FC]
  0031c	eb000000	 bl          NKDbgPrintfW

; 147  : 
; 148  :     /* Find out and print the physical address of this buffer */
; 149  :     physp_nocache = CMEM_getPhys(ptr1_nocache);

  00320	e59d0014	 ldr         r0, [sp, #0x14]
  00324	eb000000	 bl          CMEM_getPhys
  00328	e58d0044	 str         r0, [sp, #0x44]
  0032c	e59d3044	 ldr         r3, [sp, #0x44]
  00330	e58d3004	 str         r3, [sp, #4]

; 150  : 
; 151  :     if (physp_nocache == 0) {

  00334	e59d3004	 ldr         r3, [sp, #4]
  00338	e3530000	 cmp         r3, #0
  0033c	1a000003	 bne         |$LN40@testCache|

; 152  :         __D("Failed to get physical address of buffer %#x\n",
; 153  :                 (unsigned int) ptr1_nocache);

  00340	e59d1014	 ldr         r1, [sp, #0x14]
  00344	e59f06cc	 ldr         r0, [pc, #0x6CC]
  00348	eb000000	 bl          NKDbgPrintfW

; 154  :         goto cleanup;

  0034c	ea000168	 b           |$cleanup$36645|
  00350		 |$LN40@testCache|

; 155  :     }
; 156  : 
; 157  :     __D("Physical address of allocated buffer is %#x.\n",
; 158  :            (unsigned int) physp_nocache);

  00350	e59d1004	 ldr         r1, [sp, #4]
  00354	e59f06b8	 ldr         r0, [pc, #0x6B8]
  00358	eb000000	 bl          NKDbgPrintfW

; 159  : 
; 160  :     /* Write some data into this buffer */
; 161  :     for (i=0; i < size / sizeof(int) ; i++) {

  0035c	e3a03000	 mov         r3, #0
  00360	e58d3018	 str         r3, [sp, #0x18]
  00364	ea000002	 b           |$LN39@testCache|
  00368		 |$LN38@testCache|
  00368	e59d3018	 ldr         r3, [sp, #0x18]
  0036c	e2833001	 add         r3, r3, #1
  00370	e58d3018	 str         r3, [sp, #0x18]
  00374		 |$LN39@testCache|
  00374	e59d107c	 ldr         r1, [sp, #0x7C]
  00378	e3a00004	 mov         r0, #4
  0037c	e59f368c	 ldr         r3, [pc, #0x68C]
  00380	e5933000	 ldr         r3, [r3]
  00384	e1a0e00f	 mov         lr, pc
  00388	e12fff13	 bx          r3
  0038c	e59d3018	 ldr         r3, [sp, #0x18]
  00390	e1530000	 cmp         r3, r0
  00394	2a000007	 bcs         |$LN37@testCache|

; 162  :         ptr1_nocache[i] = 0xbeefbeef;

  00398	e59d1018	 ldr         r1, [sp, #0x18]
  0039c	e3a03004	 mov         r3, #4
  003a0	e0020391	 mul         r2, r1, r3
  003a4	e59d3014	 ldr         r3, [sp, #0x14]
  003a8	e0832002	 add         r2, r3, r2
  003ac	e59f36a8	 ldr         r3, [pc, #0x6A8]
  003b0	e5823000	 str         r3, [r2]

; 163  :     }

  003b4	eaffffeb	 b           |$LN38@testCache|
  003b8		 |$LN37@testCache|

; 164  : 
; 165  :     __D("Allocating first cached buffer.\n");

  003b8	e59f0698	 ldr         r0, [pc, #0x698]
  003bc	eb000000	 bl          NKDbgPrintfW

; 166  : 
; 167  :     /* First allocate a buffer from the pool that best fits */
; 168  :     params = CMEM_DEFAULTPARAMS;

  003c0	e59f168c	 ldr         r1, [pc, #0x68C]
  003c4	e28d001c	 add         r0, sp, #0x1C
  003c8	e3a0200c	 mov         r2, #0xC
  003cc	eb000000	 bl          memcpy

; 169  :     params.flags = CMEM_CACHED;

  003d0	e3a03b02	 mov         r3, #2, 22
  003d4	e58d3020	 str         r3, [sp, #0x20]

; 170  :     ptr1_cache = CMEM_alloc2(block, size, &params);

  003d8	e28d201c	 add         r2, sp, #0x1C
  003dc	e59d107c	 ldr         r1, [sp, #0x7C]
  003e0	e59d0080	 ldr         r0, [sp, #0x80]
  003e4	eb000000	 bl          CMEM_alloc2
  003e8	e58d0048	 str         r0, [sp, #0x48]
  003ec	e59d3048	 ldr         r3, [sp, #0x48]
  003f0	e58d300c	 str         r3, [sp, #0xC]

; 171  : 
; 172  :     if (ptr1_cache == NULL) {

  003f4	e59d300c	 ldr         r3, [sp, #0xC]
  003f8	e3530000	 cmp         r3, #0
  003fc	1a000003	 bne         |$LN36@testCache|

; 173  :         __D("Failed to allocate buffer of size %d\n", size);

  00400	e59d107c	 ldr         r1, [sp, #0x7C]
  00404	e59f0614	 ldr         r0, [pc, #0x614]
  00408	eb000000	 bl          NKDbgPrintfW

; 174  :         goto cleanup;

  0040c	ea000138	 b           |$cleanup$36645|
  00410		 |$LN36@testCache|

; 175  :     }
; 176  : 
; 177  :     __D("Allocated buffer of size %d at address %#x.\n", size,
; 178  :            (unsigned int) ptr1_cache);

  00410	e59d200c	 ldr         r2, [sp, #0xC]
  00414	e59d107c	 ldr         r1, [sp, #0x7C]
  00418	e59f05fc	 ldr         r0, [pc, #0x5FC]
  0041c	eb000000	 bl          NKDbgPrintfW

; 179  : 
; 180  :     /* Find out and print the physical address of this buffer */
; 181  :     physp_cache = CMEM_getPhys(ptr1_cache);

  00420	e59d000c	 ldr         r0, [sp, #0xC]
  00424	eb000000	 bl          CMEM_getPhys
  00428	e58d004c	 str         r0, [sp, #0x4C]
  0042c	e59d304c	 ldr         r3, [sp, #0x4C]
  00430	e58d3028	 str         r3, [sp, #0x28]

; 182  : 
; 183  :     if (physp_cache == 0) {

  00434	e59d3028	 ldr         r3, [sp, #0x28]
  00438	e3530000	 cmp         r3, #0
  0043c	1a000003	 bne         |$LN35@testCache|

; 184  :         __D("Failed to get physical address of buffer %#x\n",
; 185  :                 (unsigned int) ptr1_cache);

  00440	e59d100c	 ldr         r1, [sp, #0xC]
  00444	e59f05cc	 ldr         r0, [pc, #0x5CC]
  00448	eb000000	 bl          NKDbgPrintfW

; 186  :         goto cleanup;

  0044c	ea000128	 b           |$cleanup$36645|
  00450		 |$LN35@testCache|

; 187  :     }
; 188  : 
; 189  :     __D("Physical address of allocated buffer is %#x.\n",
; 190  :            (unsigned int) physp_cache);

  00450	e59d1028	 ldr         r1, [sp, #0x28]
  00454	e59f05b8	 ldr         r0, [pc, #0x5B8]
  00458	eb000000	 bl          NKDbgPrintfW

; 191  : 
; 192  :     /* Write some data into this buffer */
; 193  :     for (i = 0; i < size / sizeof(int); i++) {

  0045c	e3a03000	 mov         r3, #0
  00460	e58d3018	 str         r3, [sp, #0x18]
  00464	ea000002	 b           |$LN34@testCache|
  00468		 |$LN33@testCache|
  00468	e59d3018	 ldr         r3, [sp, #0x18]
  0046c	e2833001	 add         r3, r3, #1
  00470	e58d3018	 str         r3, [sp, #0x18]
  00474		 |$LN34@testCache|
  00474	e59d107c	 ldr         r1, [sp, #0x7C]
  00478	e3a00004	 mov         r0, #4
  0047c	e59f358c	 ldr         r3, [pc, #0x58C]
  00480	e5933000	 ldr         r3, [r3]
  00484	e1a0e00f	 mov         lr, pc
  00488	e12fff13	 bx          r3
  0048c	e59d3018	 ldr         r3, [sp, #0x18]
  00490	e1530000	 cmp         r3, r0
  00494	2a000007	 bcs         |$LN32@testCache|

; 194  :         ptr1_cache[i] = 0x0dead1ce;

  00498	e59d1018	 ldr         r1, [sp, #0x18]
  0049c	e3a03004	 mov         r3, #4
  004a0	e0020391	 mul         r2, r1, r3
  004a4	e59d300c	 ldr         r3, [sp, #0xC]
  004a8	e0832002	 add         r2, r3, r2
  004ac	e59f3598	 ldr         r3, [pc, #0x598]
  004b0	e5823000	 str         r3, [r2]

; 195  :     }

  004b4	eaffffeb	 b           |$LN33@testCache|
  004b8		 |$LN32@testCache|

; 196  : 
; 197  :     __D("Allocating noncached DMA source buffer.\n");

  004b8	e59f0590	 ldr         r0, [pc, #0x590]
  004bc	eb000000	 bl          NKDbgPrintfW

; 198  : 
; 199  :     /* Allocate a noncached buffer for the DMA source */
; 200  :     ptr1_dma = CMEM_alloc(size, NULL);

  004c0	e3a01000	 mov         r1, #0
  004c4	e59d007c	 ldr         r0, [sp, #0x7C]
  004c8	eb000000	 bl          CMEM_alloc
  004cc	e58d0050	 str         r0, [sp, #0x50]
  004d0	e59d3050	 ldr         r3, [sp, #0x50]
  004d4	e58d3008	 str         r3, [sp, #8]

; 201  : 
; 202  :     if (ptr1_dma == NULL) {

  004d8	e59d3008	 ldr         r3, [sp, #8]
  004dc	e3530000	 cmp         r3, #0
  004e0	1a000003	 bne         |$LN31@testCache|

; 203  :         __D("Failed to allocate buffer of size %d\n", size);

  004e4	e59d107c	 ldr         r1, [sp, #0x7C]
  004e8	e59f0530	 ldr         r0, [pc, #0x530]
  004ec	eb000000	 bl          NKDbgPrintfW

; 204  :         goto cleanup;

  004f0	ea0000ff	 b           |$cleanup$36645|
  004f4		 |$LN31@testCache|

; 205  :     }
; 206  : 
; 207  :     __D("Allocated buffer of size %d at address %#x.\n", size,
; 208  :            (unsigned int) ptr1_dma);

  004f4	e59d2008	 ldr         r2, [sp, #8]
  004f8	e59d107c	 ldr         r1, [sp, #0x7C]
  004fc	e59f0518	 ldr         r0, [pc, #0x518]
  00500	eb000000	 bl          NKDbgPrintfW

; 209  : 
; 210  :     /* Find out and print the physical address of this buffer */
; 211  :     physp_dma = CMEM_getPhys(ptr1_dma);

  00504	e59d0008	 ldr         r0, [sp, #8]
  00508	eb000000	 bl          CMEM_getPhys
  0050c	e58d0054	 str         r0, [sp, #0x54]
  00510	e59d3054	 ldr         r3, [sp, #0x54]
  00514	e58d3030	 str         r3, [sp, #0x30]

; 212  : 
; 213  :     if (physp_dma == 0) {

  00518	e59d3030	 ldr         r3, [sp, #0x30]
  0051c	e3530000	 cmp         r3, #0
  00520	1a000003	 bne         |$LN30@testCache|

; 214  :         __D("Failed to get physical address of buffer %#x\n",
; 215  :                 (unsigned int) ptr1_dma);

  00524	e59d1008	 ldr         r1, [sp, #8]
  00528	e59f04e8	 ldr         r0, [pc, #0x4E8]
  0052c	eb000000	 bl          NKDbgPrintfW

; 216  :         goto cleanup;

  00530	ea0000ef	 b           |$cleanup$36645|
  00534		 |$LN30@testCache|

; 217  :     }
; 218  : 
; 219  :     __D("Physical address of allocated buffer is %#x.\n",
; 220  :            (unsigned int) physp_dma);

  00534	e59d1030	 ldr         r1, [sp, #0x30]
  00538	e59f04d4	 ldr         r0, [pc, #0x4D4]
  0053c	eb000000	 bl          NKDbgPrintfW

; 221  : 
; 222  :     /* Initialize DMA source buffer */
; 223  :     for (i = 0; i < size / sizeof(int); i++) {

  00540	e3a03000	 mov         r3, #0
  00544	e58d3018	 str         r3, [sp, #0x18]
  00548	ea000002	 b           |$LN29@testCache|
  0054c		 |$LN28@testCache|
  0054c	e59d3018	 ldr         r3, [sp, #0x18]
  00550	e2833001	 add         r3, r3, #1
  00554	e58d3018	 str         r3, [sp, #0x18]
  00558		 |$LN29@testCache|
  00558	e59d107c	 ldr         r1, [sp, #0x7C]
  0055c	e3a00004	 mov         r0, #4
  00560	e59f34a8	 ldr         r3, [pc, #0x4A8]
  00564	e5933000	 ldr         r3, [r3]
  00568	e1a0e00f	 mov         lr, pc
  0056c	e12fff13	 bx          r3
  00570	e59d3018	 ldr         r3, [sp, #0x18]
  00574	e1530000	 cmp         r3, r0
  00578	2a000007	 bcs         |$LN27@testCache|

; 224  :         ptr1_cache[i] = 0x0dead1ce;

  0057c	e59d1018	 ldr         r1, [sp, #0x18]
  00580	e3a03004	 mov         r3, #4
  00584	e0020391	 mul         r2, r1, r3
  00588	e59d300c	 ldr         r3, [sp, #0xC]
  0058c	e0832002	 add         r2, r3, r2
  00590	e59f34b4	 ldr         r3, [pc, #0x4B4]
  00594	e5823000	 str         r3, [r2]

; 225  :     }

  00598	eaffffeb	 b           |$LN28@testCache|
  0059c		 |$LN27@testCache|

; 226  : 
; 227  :     /*
; 228  :      * Measure the write performance of each buffer to check that one
; 229  :      * is cached and the other isn't.
; 230  :      */
; 231  :     __D("Measuring R-M-W performance (cached should be quicker).\n");

  0059c	e59f04a4	 ldr         r0, [pc, #0x4A4]
  005a0	eb000000	 bl          NKDbgPrintfW

; 232  :     for (j = 0; j < 3; j++) {

  005a4	e3a03000	 mov         r3, #0
  005a8	e58d303c	 str         r3, [sp, #0x3C]
  005ac	ea000002	 b           |$LN26@testCache|
  005b0		 |$LN25@testCache|
  005b0	e59d303c	 ldr         r3, [sp, #0x3C]
  005b4	e2833001	 add         r3, r3, #1
  005b8	e58d303c	 str         r3, [sp, #0x3C]
  005bc		 |$LN26@testCache|
  005bc	e59d303c	 ldr         r3, [sp, #0x3C]
  005c0	e3530003	 cmp         r3, #3
  005c4	aa000040	 bge         |$LN24@testCache|

; 233  :         __D("R-M-W noncached buffer %lx\n", physp_nocache);

  005c8	e59d1004	 ldr         r1, [sp, #4]
  005cc	e59f0470	 ldr         r0, [pc, #0x470]
  005d0	eb000000	 bl          NKDbgPrintfW

; 234  :         //gettimeofday(&start_tv, NULL);
; 235  :         for (i = 0; i < (size / sizeof(int)); i += 1) {

  005d4	e3a03000	 mov         r3, #0
  005d8	e58d3018	 str         r3, [sp, #0x18]
  005dc	ea000002	 b           |$LN23@testCache|
  005e0		 |$LN22@testCache|
  005e0	e59d3018	 ldr         r3, [sp, #0x18]
  005e4	e2833001	 add         r3, r3, #1
  005e8	e58d3018	 str         r3, [sp, #0x18]
  005ec		 |$LN23@testCache|
  005ec	e59d107c	 ldr         r1, [sp, #0x7C]
  005f0	e3a00004	 mov         r0, #4
  005f4	e59f3414	 ldr         r3, [pc, #0x414]
  005f8	e5933000	 ldr         r3, [r3]
  005fc	e1a0e00f	 mov         lr, pc
  00600	e12fff13	 bx          r3
  00604	e59d3018	 ldr         r3, [sp, #0x18]
  00608	e1530000	 cmp         r3, r0
  0060c	2a00000d	 bcs         |$LN21@testCache|

; 236  :             ptr1_nocache[i] += 1;

  00610	e59d1018	 ldr         r1, [sp, #0x18]
  00614	e3a03004	 mov         r3, #4
  00618	e0020391	 mul         r2, r1, r3
  0061c	e59d3014	 ldr         r3, [sp, #0x14]
  00620	e0833002	 add         r3, r3, r2
  00624	e5933000	 ldr         r3, [r3]
  00628	e2830001	 add         r0, r3, #1
  0062c	e59d1018	 ldr         r1, [sp, #0x18]
  00630	e3a03004	 mov         r3, #4
  00634	e0020391	 mul         r2, r1, r3
  00638	e59d3014	 ldr         r3, [sp, #0x14]
  0063c	e0833002	 add         r3, r3, r2
  00640	e5830000	 str         r0, [r3]

; 237  :         }

  00644	eaffffe5	 b           |$LN22@testCache|
  00648		 |$LN21@testCache|

; 238  :         //gettimeofday(&end_tv, NULL);
; 239  :         //diff = end_tv.tv_usec - start_tv.tv_usec;
; 240  :         //if (end_tv.tv_sec > start_tv.tv_sec) {
; 241  :         //    diff += (end_tv.tv_sec - start_tv.tv_sec) * 1000000;
; 242  :         //}
; 243  :         //__D("  diff=%ld\n", diff);
; 244  : 
; 245  :         __D("R-M-W cached buffer %lx\n", physp_cache);

  00648	e59d1028	 ldr         r1, [sp, #0x28]
  0064c	e59f03dc	 ldr         r0, [pc, #0x3DC]
  00650	eb000000	 bl          NKDbgPrintfW

; 246  :         //gettimeofday(&start_tv, NULL);
; 247  :         for (i = 0; i < (size / sizeof(int)); i += 1) {

  00654	e3a03000	 mov         r3, #0
  00658	e58d3018	 str         r3, [sp, #0x18]
  0065c	ea000002	 b           |$LN20@testCache|
  00660		 |$LN19@testCache|
  00660	e59d3018	 ldr         r3, [sp, #0x18]
  00664	e2833001	 add         r3, r3, #1
  00668	e58d3018	 str         r3, [sp, #0x18]
  0066c		 |$LN20@testCache|
  0066c	e59d107c	 ldr         r1, [sp, #0x7C]
  00670	e3a00004	 mov         r0, #4
  00674	e59f3394	 ldr         r3, [pc, #0x394]
  00678	e5933000	 ldr         r3, [r3]
  0067c	e1a0e00f	 mov         lr, pc
  00680	e12fff13	 bx          r3
  00684	e59d3018	 ldr         r3, [sp, #0x18]
  00688	e1530000	 cmp         r3, r0
  0068c	2a00000d	 bcs         |$LN18@testCache|

; 248  :             ptr1_cache[i] += 1;

  00690	e59d1018	 ldr         r1, [sp, #0x18]
  00694	e3a03004	 mov         r3, #4
  00698	e0020391	 mul         r2, r1, r3
  0069c	e59d300c	 ldr         r3, [sp, #0xC]
  006a0	e0833002	 add         r3, r3, r2
  006a4	e5933000	 ldr         r3, [r3]
  006a8	e2830001	 add         r0, r3, #1
  006ac	e59d1018	 ldr         r1, [sp, #0x18]
  006b0	e3a03004	 mov         r3, #4
  006b4	e0020391	 mul         r2, r1, r3
  006b8	e59d300c	 ldr         r3, [sp, #0xC]
  006bc	e0833002	 add         r3, r3, r2
  006c0	e5830000	 str         r0, [r3]

; 249  :         }

  006c4	eaffffe5	 b           |$LN19@testCache|
  006c8		 |$LN18@testCache|

; 250  :         //gettimeofday(&end_tv, NULL);
; 251  :         //diff = end_tv.tv_usec - start_tv.tv_usec;
; 252  :         //if (end_tv.tv_sec > start_tv.tv_sec) {
; 253  :         //    diff += (end_tv.tv_sec - start_tv.tv_sec) * 1000000;
; 254  :         //}
; 255  :         //__D("  diff=%ld\n", diff);
; 256  :     }

  006c8	eaffffb8	 b           |$LN25@testCache|
  006cc		 |$LN24@testCache|

; 257  : 
; 258  :     __D("Invalidate cached buffer %p\n", ptr1_cache);

  006cc	e59d100c	 ldr         r1, [sp, #0xC]
  006d0	e59f0368	 ldr         r0, [pc, #0x368]
  006d4	eb000000	 bl          NKDbgPrintfW

; 259  : 
; 260  :     foo = *ptr1_cache;

  006d8	e59d300c	 ldr         r3, [sp, #0xC]
  006dc	e5933000	 ldr         r3, [r3]
  006e0	e58d3000	 str         r3, [sp]

; 261  :     bar = foo;

  006e4	e59d3000	 ldr         r3, [sp]
  006e8	e58d302c	 str         r3, [sp, #0x2C]

; 262  :     bar++;

  006ec	e59d302c	 ldr         r3, [sp, #0x2C]
  006f0	e2833001	 add         r3, r3, #1
  006f4	e58d302c	 str         r3, [sp, #0x2C]

; 263  :     *ptr1_cache = bar;

  006f8	e59d202c	 ldr         r2, [sp, #0x2C]
  006fc	e59d300c	 ldr         r3, [sp, #0xC]
  00700	e5832000	 str         r2, [r3]

; 264  :     CMEM_cacheInv(ptr1_cache, size);

  00704	e59d107c	 ldr         r1, [sp, #0x7C]
  00708	e59d000c	 ldr         r0, [sp, #0xC]
  0070c	eb000000	 bl          CMEM_cacheInv

; 265  :     __D("post-flush *ptr1_cache=0x%x\n", foo);

  00710	e59d1000	 ldr         r1, [sp]
  00714	e59f0320	 ldr         r0, [pc, #0x320]
  00718	eb000000	 bl          NKDbgPrintfW

; 266  :     __D("wrote 0x%x to *ptr1_cache\n", bar);

  0071c	e59d102c	 ldr         r1, [sp, #0x2C]
  00720	e59f0310	 ldr         r0, [pc, #0x310]
  00724	eb000000	 bl          NKDbgPrintfW

; 267  :     __D("post-inv *ptr1_cache=0x%x\n", *ptr1_cache);

  00728	e59d300c	 ldr         r3, [sp, #0xC]
  0072c	e5931000	 ldr         r1, [r3]
  00730	e59f02fc	 ldr         r0, [pc, #0x2FC]
  00734	eb000000	 bl          NKDbgPrintfW

; 268  : 
; 269  :     __D("R-M-W cached buffer %lx\n", physp_cache);

  00738	e59d1028	 ldr         r1, [sp, #0x28]
  0073c	e59f02ec	 ldr         r0, [pc, #0x2EC]
  00740	eb000000	 bl          NKDbgPrintfW

; 270  :     //gettimeofday(&start_tv, NULL);
; 271  :     for (i = 0; i < (size / sizeof(int)); i += 1) {

  00744	e3a03000	 mov         r3, #0
  00748	e58d3018	 str         r3, [sp, #0x18]
  0074c	ea000002	 b           |$LN17@testCache|
  00750		 |$LN16@testCache|
  00750	e59d3018	 ldr         r3, [sp, #0x18]
  00754	e2833001	 add         r3, r3, #1
  00758	e58d3018	 str         r3, [sp, #0x18]
  0075c		 |$LN17@testCache|
  0075c	e59d107c	 ldr         r1, [sp, #0x7C]
  00760	e3a00004	 mov         r0, #4
  00764	e59f32a4	 ldr         r3, [pc, #0x2A4]
  00768	e5933000	 ldr         r3, [r3]
  0076c	e1a0e00f	 mov         lr, pc
  00770	e12fff13	 bx          r3
  00774	e59d3018	 ldr         r3, [sp, #0x18]
  00778	e1530000	 cmp         r3, r0
  0077c	2a00000d	 bcs         |$LN15@testCache|

; 272  :         ptr1_cache[i] += 1;

  00780	e59d1018	 ldr         r1, [sp, #0x18]
  00784	e3a03004	 mov         r3, #4
  00788	e0020391	 mul         r2, r1, r3
  0078c	e59d300c	 ldr         r3, [sp, #0xC]
  00790	e0833002	 add         r3, r3, r2
  00794	e5933000	 ldr         r3, [r3]
  00798	e2830001	 add         r0, r3, #1
  0079c	e59d1018	 ldr         r1, [sp, #0x18]
  007a0	e3a03004	 mov         r3, #4
  007a4	e0020391	 mul         r2, r1, r3
  007a8	e59d300c	 ldr         r3, [sp, #0xC]
  007ac	e0833002	 add         r3, r3, r2
  007b0	e5830000	 str         r0, [r3]

; 273  :     }

  007b4	eaffffe5	 b           |$LN16@testCache|
  007b8		 |$LN15@testCache|

; 274  :     //gettimeofday(&end_tv, NULL);
; 275  :     //diff = end_tv.tv_usec - start_tv.tv_usec;
; 276  :     //if (end_tv.tv_sec > start_tv.tv_sec) {
; 277  :     //    diff += (end_tv.tv_sec - start_tv.tv_sec) * 1000000;
; 278  :     //}
; 279  :     //__D("  diff=%ld\n", diff);
; 280  : 
; 281  :     /*
; 282  :      * Now allocate another buffer by first finding out which pool that fits
; 283  :      * best, and then explicitly allocating from that pool. This gives more
; 284  :      * control at the cost of an extra function call, but essentially does
; 285  :      * the same thing as the above CMEM_alloc() call.
; 286  :      */
; 287  :     __D("Allocating second buffer.\n");

  007b8	e59f026c	 ldr         r0, [pc, #0x26C]
  007bc	eb000000	 bl          NKDbgPrintfW

; 288  : 
; 289  :     poolid = CMEM_getPool(size);

  007c0	e59d007c	 ldr         r0, [sp, #0x7C]
  007c4	eb000000	 bl          CMEM_getPool
  007c8	e58d0058	 str         r0, [sp, #0x58]
  007cc	e59d3058	 ldr         r3, [sp, #0x58]
  007d0	e58d3010	 str         r3, [sp, #0x10]

; 290  : 
; 291  :     if (poolid == -1) {

  007d4	e59d3010	 ldr         r3, [sp, #0x10]
  007d8	e3730001	 cmn         r3, #1
  007dc	1a000003	 bne         |$LN14@testCache|

; 292  :         __D("Failed to get a pool which fits size %d\n", size);

  007e0	e59d107c	 ldr         r1, [sp, #0x7C]
  007e4	e59f023c	 ldr         r0, [pc, #0x23C]
  007e8	eb000000	 bl          NKDbgPrintfW

; 293  :         goto cleanup;

  007ec	ea000040	 b           |$cleanup$36645|
  007f0		 |$LN14@testCache|

; 294  :     }
; 295  : 
; 296  :     __D("Got a pool (%d) that fits the size %d\n", poolid, size);

  007f0	e59d207c	 ldr         r2, [sp, #0x7C]
  007f4	e59d1010	 ldr         r1, [sp, #0x10]
  007f8	e59f0224	 ldr         r0, [pc, #0x224]
  007fc	eb000000	 bl          NKDbgPrintfW

; 297  : 
; 298  :     ptr2 = CMEM_allocPool(poolid, NULL);

  00800	e3a01000	 mov         r1, #0
  00804	e59d0010	 ldr         r0, [sp, #0x10]
  00808	eb000000	 bl          CMEM_allocPool
  0080c	e58d005c	 str         r0, [sp, #0x5C]
  00810	e59d305c	 ldr         r3, [sp, #0x5C]
  00814	e58d3038	 str         r3, [sp, #0x38]

; 299  : 
; 300  :     if (ptr2 == NULL) {

  00818	e59d3038	 ldr         r3, [sp, #0x38]
  0081c	e3530000	 cmp         r3, #0
  00820	1a000003	 bne         |$LN13@testCache|

; 301  :         __D("Failed to allocate buffer of size %d\n", size);

  00824	e59d107c	 ldr         r1, [sp, #0x7C]
  00828	e59f01f0	 ldr         r0, [pc, #0x1F0]
  0082c	eb000000	 bl          NKDbgPrintfW

; 302  :         goto cleanup;

  00830	ea00002f	 b           |$cleanup$36645|
  00834		 |$LN13@testCache|

; 303  :     }
; 304  : 
; 305  :     __D("Allocated buffer of size %d at address %#x.\n", size,
; 306  :            (unsigned int) ptr2);

  00834	e59d2038	 ldr         r2, [sp, #0x38]
  00838	e59d107c	 ldr         r1, [sp, #0x7C]
  0083c	e59f01d8	 ldr         r0, [pc, #0x1D8]
  00840	eb000000	 bl          NKDbgPrintfW

; 307  : 
; 308  :     /* Find out and print the physical address of this buffer */
; 309  :     physp = CMEM_getPhys(ptr2);

  00844	e59d0038	 ldr         r0, [sp, #0x38]
  00848	eb000000	 bl          CMEM_getPhys
  0084c	e58d0060	 str         r0, [sp, #0x60]
  00850	e59d3060	 ldr         r3, [sp, #0x60]
  00854	e58d3034	 str         r3, [sp, #0x34]

; 310  : 
; 311  :     if (physp == 0) {

  00858	e59d3034	 ldr         r3, [sp, #0x34]
  0085c	e3530000	 cmp         r3, #0
  00860	1a000003	 bne         |$LN12@testCache|

; 312  :         __D("Failed to get physical address of buffer %#x\n",
; 313  :                 (unsigned int) ptr2);

  00864	e59d1038	 ldr         r1, [sp, #0x38]
  00868	e59f01a8	 ldr         r0, [pc, #0x1A8]
  0086c	eb000000	 bl          NKDbgPrintfW

; 314  :         goto cleanup;

  00870	ea00001f	 b           |$cleanup$36645|
  00874		 |$LN12@testCache|

; 315  :     }
; 316  : 
; 317  :     __D("Physical address of allocated buffer is %#x.\n",
; 318  :            (unsigned int) physp);

  00874	e59d1034	 ldr         r1, [sp, #0x34]
  00878	e59f0194	 ldr         r0, [pc, #0x194]
  0087c	eb000000	 bl          NKDbgPrintfW

; 319  : 
; 320  :     /* Write some data into this buffer */
; 321  :     for (i=0; i < size / sizeof(int); i++) {

  00880	e3a03000	 mov         r3, #0
  00884	e58d3018	 str         r3, [sp, #0x18]
  00888	ea000002	 b           |$LN11@testCache|
  0088c		 |$LN10@testCache|
  0088c	e59d3018	 ldr         r3, [sp, #0x18]
  00890	e2833001	 add         r3, r3, #1
  00894	e58d3018	 str         r3, [sp, #0x18]
  00898		 |$LN11@testCache|
  00898	e59d107c	 ldr         r1, [sp, #0x7C]
  0089c	e3a00004	 mov         r0, #4
  008a0	e59f3168	 ldr         r3, [pc, #0x168]
  008a4	e5933000	 ldr         r3, [r3]
  008a8	e1a0e00f	 mov         lr, pc
  008ac	e12fff13	 bx          r3
  008b0	e59d3018	 ldr         r3, [sp, #0x18]
  008b4	e1530000	 cmp         r3, r0
  008b8	2a000008	 bcs         |$LN9@testCache|

; 322  :         ptr2[i] = 0xfeebfeeb;

  008bc	e59d1018	 ldr         r1, [sp, #0x18]
  008c0	e3a03004	 mov         r3, #4
  008c4	e0020391	 mul         r2, r1, r3
  008c8	e59d3038	 ldr         r3, [sp, #0x38]
  008cc	e0832002	 add         r2, r3, r2
  008d0	e3e03745	 mvn         r3, #0x45, 14
  008d4	e2233f45	 eor         r3, r3, #0x45, 30
  008d8	e5823000	 str         r3, [r2]

; 323  :     }

  008dc	eaffffea	 b           |$LN10@testCache|
  008e0		 |$LN9@testCache|

; 324  : 
; 325  :     //__D("Inspect your memory map in /proc/%d/maps.\n", getpid());
; 326  :     __D("Also look at your pool info under /proc/cmem\n");

  008e0	e59f0124	 ldr         r0, [pc, #0x124]
  008e4	eb000000	 bl          NKDbgPrintfW

; 327  :     __D("Press ENTER to exit (after 'cat /proc/cmem' if desired).\n");

  008e8	e59f0118	 ldr         r0, [pc, #0x118]
  008ec	eb000000	 bl          NKDbgPrintfW

; 328  :     getchar();

  008f0	eb000000	 bl          getchar
  008f4		 |$cleanup$36645|

; 329  : 
; 330  : cleanup:
; 331  :     if (ptr1_nocache != NULL) {

  008f4	e59d3014	 ldr         r3, [sp, #0x14]
  008f8	e3530000	 cmp         r3, #0
  008fc	0a00000c	 beq         |$LN8@testCache|

; 332  :         if (CMEM_free(ptr1_nocache, NULL) < 0) {

  00900	e3a01000	 mov         r1, #0
  00904	e59d0014	 ldr         r0, [sp, #0x14]
  00908	eb000000	 bl          CMEM_free
  0090c	e58d0064	 str         r0, [sp, #0x64]
  00910	e59d3064	 ldr         r3, [sp, #0x64]
  00914	e3530000	 cmp         r3, #0
  00918	aa000002	 bge         |$LN7@testCache|

; 333  :             __D("Failed to free buffer at %#x\n",
; 334  :                     (unsigned int) ptr1_nocache);

  0091c	e59d1014	 ldr         r1, [sp, #0x14]
  00920	e59f00dc	 ldr         r0, [pc, #0xDC]
  00924	eb000000	 bl          NKDbgPrintfW
  00928		 |$LN7@testCache|

; 335  :         }
; 336  :         __D("Successfully freed buffer at %#x.\n",
; 337  :                (unsigned int) ptr1_nocache);

  00928	e59d1014	 ldr         r1, [sp, #0x14]
  0092c	e59f00cc	 ldr         r0, [pc, #0xCC]
  00930	eb000000	 bl          NKDbgPrintfW
  00934		 |$LN8@testCache|

; 338  :     }
; 339  : 
; 340  :     if (ptr1_cache != NULL) {

  00934	e59d300c	 ldr         r3, [sp, #0xC]
  00938	e3530000	 cmp         r3, #0
  0093c	0a00000c	 beq         |$LN6@testCache|

; 341  :         if (CMEM_free(ptr1_cache, &params) < 0) {

  00940	e28d101c	 add         r1, sp, #0x1C
  00944	e59d000c	 ldr         r0, [sp, #0xC]
  00948	eb000000	 bl          CMEM_free
  0094c	e58d0068	 str         r0, [sp, #0x68]
  00950	e59d3068	 ldr         r3, [sp, #0x68]
  00954	e3530000	 cmp         r3, #0
  00958	aa000002	 bge         |$LN5@testCache|

; 342  :             __D("Failed to free buffer at %#x\n",
; 343  :                     (unsigned int) ptr1_cache);

  0095c	e59d100c	 ldr         r1, [sp, #0xC]
  00960	e59f009c	 ldr         r0, [pc, #0x9C]
  00964	eb000000	 bl          NKDbgPrintfW
  00968		 |$LN5@testCache|

; 344  :         }
; 345  :         __D("Successfully freed buffer at %#x.\n",
; 346  :                (unsigned int) ptr1_cache);

  00968	e59d100c	 ldr         r1, [sp, #0xC]
  0096c	e59f008c	 ldr         r0, [pc, #0x8C]
  00970	eb000000	 bl          NKDbgPrintfW
  00974		 |$LN6@testCache|

; 347  :     }
; 348  : 
; 349  :     if (ptr1_dma != NULL) {

  00974	e59d3008	 ldr         r3, [sp, #8]
  00978	e3530000	 cmp         r3, #0
  0097c	0a00000c	 beq         |$LN4@testCache|

; 350  :         if (CMEM_free(ptr1_dma, NULL) < 0) {

  00980	e3a01000	 mov         r1, #0
  00984	e59d0008	 ldr         r0, [sp, #8]
  00988	eb000000	 bl          CMEM_free
  0098c	e58d006c	 str         r0, [sp, #0x6C]
  00990	e59d306c	 ldr         r3, [sp, #0x6C]
  00994	e3530000	 cmp         r3, #0
  00998	aa000002	 bge         |$LN3@testCache|

; 351  :             __D("Failed to free buffer at %#x\n",
; 352  :                     (unsigned int) ptr1_dma);

  0099c	e59d1008	 ldr         r1, [sp, #8]
  009a0	e59f005c	 ldr         r0, [pc, #0x5C]
  009a4	eb000000	 bl          NKDbgPrintfW
  009a8		 |$LN3@testCache|

; 353  :         }
; 354  :         __D("Successfully freed buffer at %#x.\n",
; 355  :                (unsigned int) ptr1_dma);

  009a8	e59d1008	 ldr         r1, [sp, #8]
  009ac	e59f004c	 ldr         r0, [pc, #0x4C]
  009b0	eb000000	 bl          NKDbgPrintfW
  009b4		 |$LN4@testCache|

; 356  :     }
; 357  : 
; 358  :     if (ptr2 != NULL) {

  009b4	e59d3038	 ldr         r3, [sp, #0x38]
  009b8	e3530000	 cmp         r3, #0
  009bc	0a00000c	 beq         |$LN2@testCache|

; 359  :         if (CMEM_free(ptr2, NULL) < 0) {

  009c0	e3a01000	 mov         r1, #0
  009c4	e59d0038	 ldr         r0, [sp, #0x38]
  009c8	eb000000	 bl          CMEM_free
  009cc	e58d0070	 str         r0, [sp, #0x70]
  009d0	e59d3070	 ldr         r3, [sp, #0x70]
  009d4	e3530000	 cmp         r3, #0
  009d8	aa000002	 bge         |$LN1@testCache|

; 360  :             __D("Failed to free buffer at %#x\n",
; 361  :                     (unsigned int) ptr2);

  009dc	e59d1038	 ldr         r1, [sp, #0x38]
  009e0	e59f001c	 ldr         r0, [pc, #0x1C]
  009e4	eb000000	 bl          NKDbgPrintfW
  009e8		 |$LN1@testCache|

; 362  :         }
; 363  :         __D("Successfully freed buffer at %#x.\n",
; 364  :                (unsigned int) ptr2);

  009e8	e59d1038	 ldr         r1, [sp, #0x38]
  009ec	e59f000c	 ldr         r0, [pc, #0xC]
  009f0	eb000000	 bl          NKDbgPrintfW
  009f4		 |$LN2@testCache|

; 365  :     }
; 366  : }

  009f4	e28dd074	 add         sp, sp, #0x74
  009f8	e89d6000	 ldmia       sp, {sp, lr}
  009fc	e12fff1e	 bx          lr
  00a00		 |$LN47@testCache|
  00a00		 |$LN48@testCache|
  00a00	00000000	 DCD         |??_C@_1FO@LOGJMALI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAb@|
  00a04		 |$LN49@testCache|
  00a04	00000000	 DCD         |??_C@_1FE@LIHDMFNK@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAr?$AAe?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe@|
  00a08		 |$LN50@testCache|
  00a08	00000000	 DCD         |??_C@_1IM@FJCHNFB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?5@|
  00a0c		 |$LN51@testCache|
  00a0c	00000000	 DCD         |??_C@_1HE@FHFEDGIC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAs?$AAo?$AA?5?$AAl?$AAo?$AAo?$AAk?$AA?5?$AAa?$AAt?$AA?5?$AAy?$AAo?$AAu?$AAr?$AA?5?$AAp?$AAo@|
  00a10		 |$LN52@testCache|
  00a10	00000000	 DCD         |__imp___rt_udiv|
  00a14		 |$LN53@testCache|
  00a14	00000000	 DCD         |??_C@_1HE@GLDDPKCO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAo?$AAf?$AA?5@|
  00a18		 |$LN54@testCache|
  00a18	00000000	 DCD         |??_C@_1HE@GCDNPCNE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc@|
  00a1c		 |$LN55@testCache|
  00a1c	00000000	 DCD         |??_C@_1HC@PNAMJAEN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5@|
  00a20		 |$LN56@testCache|
  00a20	00000000	 DCD         |??_C@_1GE@HKKKOAAM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAb@|
  00a24		 |$LN57@testCache|
  00a24	00000000	 DCD         |??_C@_1GG@GJPGAMJC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAt?$AAh?$AAa?$AAt@|
  00a28		 |$LN58@testCache|
  00a28	00000000	 DCD         |??_C@_1GK@EIIBBOGD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl@|
  00a2c		 |$LN59@testCache|
  00a2c	00000000	 DCD         |??_C@_1EO@BGHLODNO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAe?$AAc?$AAo?$AAn?$AAd?$AA?5?$AAb?$AAu@|
  00a30		 |$LN60@testCache|
  00a30	00000000	 DCD         |??_C@_1EK@HBIBOILM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5@|
  00a34		 |$LN61@testCache|
  00a34	00000000	 DCD         |??_C@_1EO@LCMIHFBH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAi?$AAn?$AAv?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc?$AAh?$AAe@|
  00a38		 |$LN62@testCache|
  00a38	00000000	 DCD         |??_C@_1EO@NODFGNKJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAw?$AAr?$AAo?$AAt?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAt?$AAo?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_@|
  00a3c		 |$LN63@testCache|
  00a3c	00000000	 DCD         |??_C@_1FC@NPCGMDIJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAf?$AAl?$AAu?$AAs?$AAh?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc@|
  00a40		 |$LN64@testCache|
  00a40	00000000	 DCD         |??_C@_1FC@HONHKAHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu@|
  00a44		 |$LN65@testCache|
  00a44	00000000	 DCD         |??_C@_1FA@CMKGCONF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf@|
  00a48		 |$LN66@testCache|
  00a48	00000000	 DCD         |??_C@_1IK@EPPOJJHN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAM?$AAe?$AAa?$AAs?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAp?$AAe?$AAr?$AAf@|
  00a4c		 |$LN67@testCache|
  00a4c	0dead1ce	 DCD         0xdead1ce
  00a50		 |$LN68@testCache|
  00a50	00000000	 DCD         |??_C@_1GK@DMOBBDFE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd@|
  00a54		 |$LN69@testCache|
  00a54	00000000	 DCD         |CMEM_DEFAULTPARAMS|
  00a58		 |$LN70@testCache|
  00a58	00000000	 DCD         |??_C@_1FK@CBOCBED@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAc?$AAa?$AAc@|
  00a5c		 |$LN71@testCache|
  00a5c	beefbeef	 DCD         0xbeefbeef
  00a60		 |$LN72@testCache|
  00a60	00000000	 DCD         |??_C@_1GA@BPOMFHKH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAn@|
  00a64		 |$M36849|

			 ENDP  ; |testCache|

	EXPORT	|??_C@_1GA@PCBOKHKI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@BFDEAPHH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@CLDCADHL@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@LAJHEPBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@JFPDAKOB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA1?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@PMBGPOND@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@DLPIFJHF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA0?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@JJHBMFJF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@KKGKPOBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@JEJAOPHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@DDGKLPOD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?4?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@EKHBALIP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@EFKHFNKP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAU?$AAs?$AAa?$AAg?$AAe?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DM?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf@| [ DATA ] ; `string'
	EXPORT	|main|
	IMPORT	|CMEM_exit|
	IMPORT	|CMEM_getBlockAttrs|
	IMPORT	|CMEM_getVersion|
	IMPORT	|CMEM_init|
	IMPORT	|atoi|
	IMPORT	|exit|

  00010			 AREA	 |.pdata|, PDATA
|$T36883| DCD	|$LN12@main|
	DCD	0x40007504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@PCBOKHKI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "C", 0x0, "M"
	DCB	0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@BFDEAPHH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "i", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "w"
	DCB	0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "g", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, " ", 0x0, "0", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@CLDCADHL@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "i", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "1", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@LAJHEPBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "i", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "0", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@JFPDAKOB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA1?$AA?3@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "b"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "1"
	DCB	0x0, ":", 0x0, " ", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "l", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@PMBGPOND@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "r", 0x0, "i", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "C", 0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "1", 0x0, " ", 0x0, "b", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@DLPIFJHF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA0?$AA?3@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "b"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "0"
	DCB	0x0, ":", 0x0, " ", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "l", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@JJHBMFJF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "r", 0x0, "i", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "C", 0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "0", 0x0, " ", 0x0, "b", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@KKGKPOBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@JEJAOPHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "r", 0x0, "i", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "C", 0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@DDGKLPOD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?4?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@EKHBALIP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "C", 0x0, "M", 0x0, "E", 0x0, "M"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@EFKHFNKP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAU?$AAs?$AAa?$AAg?$AAe?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DM?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "U"
	DCB	0x0, "s", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "<", 0x0, "N", 0x0, "u"
	DCB	0x0, "m", 0x0, "b", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "o"
	DCB	0x0, "f", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, ">", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00a64			 AREA	 |.text|, CODE, ARM

  00a64		 |main|	 PROC

; 369  : {

  00a64		 |$LN12@main|
  00a64	e1a0c00d	 mov         r12, sp
  00a68	e92d0003	 stmdb       sp!, {r0, r1}
  00a6c	e92d5000	 stmdb       sp!, {r12, lr}
  00a70	e24dd028	 sub         sp, sp, #0x28
  00a74		 |$M36880|

; 370  :     int size;
; 371  :     int version;
; 372  :     CMEM_BlockAttrs attrs;
; 373  : 
; 374  :     DebugBreak();

  00a74	e6000010	 __debugbreak_ce

; 375  : 
; 376  :     if (ARGC != 2) {

  00a78	e59f31b4	 ldr         r3, [pc, #0x1B4]
  00a7c	e5933000	 ldr         r3, [r3]
  00a80	e3530002	 cmp         r3, #2
  00a84	0a000005	 beq         |$LN6@main|

; 377  :         __D("Usage: %s <Number of bytes to allocate>\n", ARGV[0]);

  00a88	e59f319c	 ldr         r3, [pc, #0x19C]
  00a8c	e5931000	 ldr         r1, [r3]
  00a90	e59f0198	 ldr         r0, [pc, #0x198]
  00a94	eb000000	 bl          NKDbgPrintfW

; 378  :         exit(EXIT_FAILURE);

  00a98	e3a00001	 mov         r0, #1
  00a9c	eb000000	 bl          exit
  00aa0		 |$LN6@main|

; 379  :     }
; 380  : 
; 381  :     size = atoi(ARGV[1]);

  00aa0	e59f3184	 ldr         r3, [pc, #0x184]
  00aa4	e5930004	 ldr         r0, [r3, #4]
  00aa8	eb000000	 bl          atoi
  00aac	e58d0010	 str         r0, [sp, #0x10]
  00ab0	e59d3010	 ldr         r3, [sp, #0x10]
  00ab4	e58d3008	 str         r3, [sp, #8]

; 382  : 
; 383  :     /* First initialize the CMEM module */
; 384  :     if (CMEM_init() == -1) {

  00ab8	eb000000	 bl          CMEM_init
  00abc	e58d0014	 str         r0, [sp, #0x14]
  00ac0	e59d3014	 ldr         r3, [sp, #0x14]
  00ac4	e3730001	 cmn         r3, #1
  00ac8	1a000003	 bne         |$LN5@main|

; 385  :         __D("Failed to initialize CMEM\n");

  00acc	e59f0154	 ldr         r0, [pc, #0x154]
  00ad0	eb000000	 bl          NKDbgPrintfW

; 386  :         exit(EXIT_FAILURE);

  00ad4	e3a00001	 mov         r0, #1
  00ad8	eb000000	 bl          exit
  00adc		 |$LN5@main|

; 387  :     }
; 388  : 
; 389  :     __D("CMEM initialized.\n");

  00adc	e59f0140	 ldr         r0, [pc, #0x140]
  00ae0	eb000000	 bl          NKDbgPrintfW

; 390  : 
; 391  :     version = CMEM_getVersion();

  00ae4	eb000000	 bl          CMEM_getVersion
  00ae8	e58d0018	 str         r0, [sp, #0x18]
  00aec	e59d3018	 ldr         r3, [sp, #0x18]
  00af0	e58d300c	 str         r3, [sp, #0xC]

; 392  :     if (version == -1) {

  00af4	e59d300c	 ldr         r3, [sp, #0xC]
  00af8	e3730001	 cmn         r3, #1
  00afc	1a000001	 bne         |$LN4@main|

; 393  :         __D("Failed to retrieve CMEM version\n");

  00b00	e59f0118	 ldr         r0, [pc, #0x118]
  00b04	eb000000	 bl          NKDbgPrintfW
  00b08		 |$LN4@main|

; 394  :     }
; 395  :     __D("CMEM version = 0x%x\n", version);

  00b08	e59d100c	 ldr         r1, [sp, #0xC]
  00b0c	e59f0108	 ldr         r0, [pc, #0x108]
  00b10	eb000000	 bl          NKDbgPrintfW

; 396  : 
; 397  :     if (CMEM_getBlockAttrs(0, &attrs) == -1) {

  00b14	e28d1000	 add         r1, sp, #0
  00b18	e3a00000	 mov         r0, #0
  00b1c	eb000000	 bl          CMEM_getBlockAttrs
  00b20	e58d001c	 str         r0, [sp, #0x1C]
  00b24	e59d301c	 ldr         r3, [sp, #0x1C]
  00b28	e3730001	 cmn         r3, #1
  00b2c	1a000001	 bne         |$LN3@main|

; 398  :         __D("Failed to retrieve CMEM memory block 0 bounds\n");

  00b30	e59f00e0	 ldr         r0, [pc, #0xE0]
  00b34	eb000000	 bl          NKDbgPrintfW
  00b38		 |$LN3@main|

; 399  :     }
; 400  :     __D("CMEM memory block 0: phys start = 0x%lx, size = 0x%x\n",
; 401  :            attrs.phys_base, attrs.size);

  00b38	e59d2004	 ldr         r2, [sp, #4]
  00b3c	e59d1000	 ldr         r1, [sp]
  00b40	e59f00cc	 ldr         r0, [pc, #0xCC]
  00b44	eb000000	 bl          NKDbgPrintfW

; 402  : 
; 403  :     if (CMEM_getBlockAttrs(1, &attrs) == -1) {

  00b48	e28d1000	 add         r1, sp, #0
  00b4c	e3a00001	 mov         r0, #1
  00b50	eb000000	 bl          CMEM_getBlockAttrs
  00b54	e58d0020	 str         r0, [sp, #0x20]
  00b58	e59d3020	 ldr         r3, [sp, #0x20]
  00b5c	e3730001	 cmn         r3, #1
  00b60	1a000001	 bne         |$LN2@main|

; 404  :         __D("Failed to retrieve CMEM memory block 1 bounds\n");

  00b64	e59f00a4	 ldr         r0, [pc, #0xA4]
  00b68	eb000000	 bl          NKDbgPrintfW
  00b6c		 |$LN2@main|

; 405  :     }
; 406  :     __D("CMEM memory block 1: phys start = 0x%lx, size = 0x%x\n",
; 407  :            attrs.phys_base, attrs.size);

  00b6c	e59d2004	 ldr         r2, [sp, #4]
  00b70	e59d1000	 ldr         r1, [sp]
  00b74	e59f0090	 ldr         r0, [pc, #0x90]
  00b78	eb000000	 bl          NKDbgPrintfW

; 408  : 
; 409  :     __D("main: Testing heap allocation in block 0...\n");

  00b7c	e59f0084	 ldr         r0, [pc, #0x84]
  00b80	eb000000	 bl          NKDbgPrintfW

; 410  :     testHeap(size, 0);

  00b84	e3a01000	 mov         r1, #0
  00b88	e59d0008	 ldr         r0, [sp, #8]
  00b8c	eb000000	 bl          testHeap

; 411  :     __D("main: Testing heap allocation in block 1...\n");

  00b90	e59f006c	 ldr         r0, [pc, #0x6C]
  00b94	eb000000	 bl          NKDbgPrintfW

; 412  :     testHeap(size, 1);

  00b98	e3a01001	 mov         r1, #1
  00b9c	e59d0008	 ldr         r0, [sp, #8]
  00ba0	eb000000	 bl          testHeap

; 413  : 
; 414  :     __D("main: Testing heap allocation with cache flags in block 0...\n");

  00ba4	e59f0054	 ldr         r0, [pc, #0x54]
  00ba8	eb000000	 bl          NKDbgPrintfW

; 415  :     testCache(size, 0);

  00bac	e3a01000	 mov         r1, #0
  00bb0	e59d0008	 ldr         r0, [sp, #8]
  00bb4	eb000000	 bl          testCache

; 416  :     __D("main: Testing heap allocation with cache flags in block 0...\n");

  00bb8	e59f0040	 ldr         r0, [pc, #0x40]
  00bbc	eb000000	 bl          NKDbgPrintfW

; 417  :     testCache(size, 1);

  00bc0	e3a01001	 mov         r1, #1
  00bc4	e59d0008	 ldr         r0, [sp, #8]
  00bc8	eb000000	 bl          testCache

; 418  : 
; 419  :     if (CMEM_exit() < 0) {

  00bcc	eb000000	 bl          CMEM_exit
  00bd0	e58d0024	 str         r0, [sp, #0x24]
  00bd4	e59d3024	 ldr         r3, [sp, #0x24]
  00bd8	e3530000	 cmp         r3, #0
  00bdc	aa000001	 bge         |$LN1@main|

; 420  :         __D("Failed to finalize the CMEM module\n");

  00be0	e59f0014	 ldr         r0, [pc, #0x14]
  00be4	eb000000	 bl          NKDbgPrintfW
  00be8		 |$LN1@main|

; 421  :     }
; 422  : 
; 423  :     exit(EXIT_SUCCESS);

  00be8	e3a00000	 mov         r0, #0
  00bec	eb000000	 bl          exit
  00bf0		 |$LN9@main|

; 424  : }

  00bf0	e28dd028	 add         sp, sp, #0x28
  00bf4	e89d6000	 ldmia       sp, {sp, lr}
  00bf8	e12fff1e	 bx          lr
  00bfc		 |$LN13@main|
  00bfc		 |$LN14@main|
  00bfc	00000000	 DCD         |??_C@_1GA@PCBOKHKI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt@|
  00c00		 |$LN15@main|
  00c00	00000000	 DCD         |??_C@_1JE@BFDEAPHH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@|
  00c04		 |$LN16@main|
  00c04	00000000	 DCD         |??_C@_1HC@CLDCADHL@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@|
  00c08		 |$LN17@main|
  00c08	00000000	 DCD         |??_C@_1HC@LAJHEPBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@|
  00c0c		 |$LN18@main|
  00c0c	00000000	 DCD         |??_C@_1IE@JFPDAKOB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA1?$AA?3@|
  00c10		 |$LN19@main|
  00c10	00000000	 DCD         |??_C@_1HG@PMBGPOND@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@|
  00c14		 |$LN20@main|
  00c14	00000000	 DCD         |??_C@_1IE@DLPIFJHF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA0?$AA?3@|
  00c18		 |$LN21@main|
  00c18	00000000	 DCD         |??_C@_1HG@JJHBMFJF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@|
  00c1c		 |$LN22@main|
  00c1c	00000000	 DCD         |??_C@_1EC@KKGKPOBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@|
  00c20		 |$LN23@main|
  00c20	00000000	 DCD         |??_C@_1FK@JEJAOPHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@|
  00c24		 |$LN24@main|
  00c24	00000000	 DCD         |??_C@_1DO@DDGKLPOD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?4?$AA?6?$AA?$AA@|
  00c28		 |$LN25@main|
  00c28	00000000	 DCD         |??_C@_1EO@EKHBALIP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@|
  00c2c		 |$LN26@main|
  00c2c	00000000	 DCD         |ARGV|
  00c30		 |$LN27@main|
  00c30	00000000	 DCD         |??_C@_1GK@EFKHFNKP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAU?$AAs?$AAa?$AAg?$AAe?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DM?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf@|
  00c34		 |$LN28@main|
  00c34	00000000	 DCD         |ARGC|
  00c38		 |$M36881|

			 ENDP  ; |main|

	END
