; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	I:\library\trees\winceutils\winceutils-b01x\src\ti\sdo\winceutils\cmem\apps\apitest\apitest.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_04MJHCKDHM@1024?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_0BC@KMKLDNNJ@apitest_wince?4exe?$AA@| [ DATA ] ; `string'
	EXPORT	|ARGC| [ DATA ]
	EXPORT	|ARGV| [ DATA ]

  00000			 AREA	 |.data|, DATA
	 COMMON	|heap_ptrs|, 0x4000


  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_04MJHCKDHM@1024?$AA@| DCB "1024", 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BC@KMKLDNNJ@apitest_wince?4exe?$AA@| DCB "apitest_wince.exe", 0x0 ; `string'

  00000			 AREA	 |.data|, DATA
|ARGC|	DCD	0x2
|ARGV|	DCD	|??_C@_0BC@KMKLDNNJ@apitest_wince?4exe?$AA@|
	DCD	|??_C@_04MJHCKDHM@1024?$AA@|
	EXPORT	|testHeap|
	EXPORT	|??_C@_1CK@EKFKJOAO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@JGGCDFCC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@LJLCIILN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AA?9?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@NOABKNPO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MIKINHML@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@JOPMKKAN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@JENCBDEO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BKPLHBGB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?4@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@CMLBLJDM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAu?$AAf?$AAf@| [ DATA ] ; `string'
	IMPORT	|CMEM_free|
	IMPORT	|getchar|
	IMPORT	|CMEM_alloc2|
	IMPORT	|NKDbgPrintfW|
; File i:\library\trees\winceutils\winceutils-b01x\src\ti\sdo\winceutils\cmem\apps\apitest\apitest.c

  00000			 AREA	 |.pdata|, PDATA
|$T36878| DCD	|$LN32@testHeap|
	DCD	0x40006902

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EKFKJOAO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, "d", 0x0, "o", 0x0, "n", 0x0, "e"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@JGGCDFCC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, "d", 0x0, "o", 0x0, "n", 0x0, "e"
	DCB	0x0, ",", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "e", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "h", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "s", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@LJLCIILN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AA?9?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "-", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "h", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@NOABKNPO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MIKINHML@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@JOPMKKAN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, "d", 0x0, "o", 0x0, "n", 0x0, "e"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@JENCBDEO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAi@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "P"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "E"
	DCB	0x0, "N", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "("
	DCB	0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "'", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, " ", 0x0, "/"
	DCB	0x0, "p", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "/", 0x0, "c"
	DCB	0x0, "m", 0x0, "e", 0x0, "m", 0x0, "'", 0x0, " ", 0x0, "i"
	DCB	0x0, "f", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, "i"
	DCB	0x0, "r", 0x0, "e", 0x0, "d", 0x0, ")", 0x0, ".", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BKPLHBGB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?4@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@CMLBLJDM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAu?$AAf?$AAf@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "h", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "C", 0x0, "M"
	DCB	0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "b", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |testHeap| PROC

; 64   : {

  00000		 |$LN32@testHeap|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M36875|
  00008	e1a08001	 mov         r8, r1
  0000c	e1a09000	 mov         r9, r0

; 65   :     int rv;
; 66   :     int num_buffers;
; 67   :     int i;
; 68   :     CMEM_AllocParams params;
; 69   : 
; 70   :     __D("allocating heap buffers from CMEM memory block %d...\n", block);

  00010	e59f0188	 ldr         r0, [pc, #0x188]
  00014	eb000000	 bl          NKDbgPrintfW
  00018	e59f617c	 ldr         r6, [pc, #0x17C]

; 71   :     num_buffers = 0;
; 72   :     params.type = CMEM_HEAP;

  0001c	e3a03b01	 mov         r3, #1, 22

; 73   :     params.flags = CMEM_NONCACHED;

  00020	e3a02000	 mov         r2, #0

; 74   :     params.alignment = 0;

  00024	e3a01000	 mov         r1, #0
  00028	e1a05006	 mov         r5, r6
  0002c	e3a04000	 mov         r4, #0
  00030	e58d3000	 str         r3, [sp]
  00034	e58d2004	 str         r2, [sp, #4]
  00038	e58d1008	 str         r1, [sp, #8]
  0003c		 |$LL15@testHeap|

; 75   :     while (num_buffers < NUMHEAPPTRS) {
; 76   :         heap_ptrs[num_buffers] = CMEM_alloc2(block, size, &params);

  0003c	e28d2000	 add         r2, sp, #0
  00040	e1a01009	 mov         r1, r9
  00044	e1a00008	 mov         r0, r8
  00048	eb000000	 bl          CMEM_alloc2
  0004c	e3500000	 cmp         r0, #0
  00050	e5850000	 str         r0, [r5]

; 77   :         if (heap_ptrs[num_buffers] == NULL) {

  00054	0a000003	 beq         |$LN22@testHeap|

; 78   :             break;
; 79   :         }
; 80   :         num_buffers++;

  00058	e2844001	 add         r4, r4, #1
  0005c	e3540a01	 cmp         r4, #1, 20
  00060	e2855004	 add         r5, r5, #4
  00064	bafffff4	 blt         |$LL15@testHeap|
  00068		 |$LN22@testHeap|

; 81   :     }
; 82   :     __D("...done, %d allocated\n", num_buffers);

  00068	e59f0128	 ldr         r0, [pc, #0x128]
  0006c	e1a01004	 mov         r1, r4
  00070	eb000000	 bl          NKDbgPrintfW

; 83   : 
; 84   :     __D("Press ENTER to continue (after 'cat /proc/cmem' if desired).\n");

  00074	e59f0118	 ldr         r0, [pc, #0x118]
  00078	eb000000	 bl          NKDbgPrintfW

; 85   :     getchar();

  0007c	eb000000	 bl          getchar

; 86   : 
; 87   :     __D("freeing heap blocks...\n");

  00080	e59f0108	 ldr         r0, [pc, #0x108]
  00084	eb000000	 bl          NKDbgPrintfW

; 88   :     for (i = 0; i < num_buffers; i++) {

  00088	e3a07000	 mov         r7, #0
  0008c	e3540000	 cmp         r4, #0
  00090	da00000d	 ble         |$LN10@testHeap|
  00094	e1a05006	 mov         r5, r6
  00098	e3a0a000	 mov         r10, #0
  0009c		 |$LL12@testHeap|

; 89   :         rv = CMEM_free(heap_ptrs[i], &params);

  0009c	e5950000	 ldr         r0, [r5]
  000a0	e28d1000	 add         r1, sp, #0
  000a4	eb000000	 bl          CMEM_free
  000a8	e3500000	 cmp         r0, #0

; 90   :         if (rv < 0) {

  000ac	4a000004	 bmi         |$LN23@testHeap|
  000b0	e2877001	 add         r7, r7, #1
  000b4	e1570004	 cmp         r7, r4

; 92   :             break;
; 93   :         }
; 94   :         heap_ptrs[i] = NULL;

  000b8	e485a004	 str         r10, [r5], #4
  000bc	bafffff6	 blt         |$LL12@testHeap|

; 109  :         if (rv < 0) {

  000c0	ea000001	 b           |$LN10@testHeap|
  000c4		 |$LN23@testHeap|

; 91   :             __D("error freeing blocks\n");

  000c4	e59f00b4	 ldr         r0, [pc, #0xB4]
  000c8	eb000000	 bl          NKDbgPrintfW
  000cc		 |$LN10@testHeap|

; 95   :     }
; 96   : 
; 97   :     /* make sure we can still allocate num_buffers after freeing */
; 98   :     __D("allocating %d heap blocks...\n", num_buffers);

  000cc	e59f00b8	 ldr         r0, [pc, #0xB8]
  000d0	e1a01004	 mov         r1, r4
  000d4	eb000000	 bl          NKDbgPrintfW

; 99   :     for (i = 0; i < num_buffers; i++) {

  000d8	e3a05000	 mov         r5, #0
  000dc	e3540000	 cmp         r4, #0
  000e0	da00000f	 ble         |$LN6@testHeap|
  000e4	e1a07006	 mov         r7, r6
  000e8		 |$LL8@testHeap|

; 100  :         heap_ptrs[i] = CMEM_alloc2(block, size, &params);

  000e8	e28d2000	 add         r2, sp, #0
  000ec	e1a01009	 mov         r1, r9
  000f0	e1a00008	 mov         r0, r8
  000f4	eb000000	 bl          CMEM_alloc2
  000f8	e3500000	 cmp         r0, #0
  000fc	e5870000	 str         r0, [r7]

; 101  :         if (heap_ptrs[i] == NULL) {

  00100	0a000004	 beq         |$LN24@testHeap|
  00104	e2855001	 add         r5, r5, #1
  00108	e1550004	 cmp         r5, r4
  0010c	e2877004	 add         r7, r7, #4
  00110	bafffff4	 blt         |$LL8@testHeap|

; 109  :         if (rv < 0) {

  00114	ea000002	 b           |$LN6@testHeap|
  00118		 |$LN24@testHeap|

; 102  :             __D("error re-allocating %d heap blocks\n", num_buffers);

  00118	e59f0068	 ldr         r0, [pc, #0x68]
  0011c	e1a01004	 mov         r1, r4
  00120	eb000000	 bl          NKDbgPrintfW
  00124		 |$LN6@testHeap|

; 103  :             break;
; 104  :         }
; 105  :     }
; 106  :     __D("...done, freeing heap blocks...\n");

  00124	e59f0058	 ldr         r0, [pc, #0x58]
  00128	eb000000	 bl          NKDbgPrintfW

; 107  :     for (i = 0; i < num_buffers; i++) {

  0012c	e3a05000	 mov         r5, #0
  00130	e3540000	 cmp         r4, #0
  00134	da00000b	 ble         |$LN2@testHeap|
  00138		 |$LL4@testHeap|

; 108  :         rv = CMEM_free(heap_ptrs[i], &params);

  00138	e5960000	 ldr         r0, [r6]
  0013c	e28d1000	 add         r1, sp, #0
  00140	eb000000	 bl          CMEM_free
  00144	e3500000	 cmp         r0, #0

; 109  :         if (rv < 0) {

  00148	4a000004	 bmi         |$LN25@testHeap|
  0014c	e2855001	 add         r5, r5, #1
  00150	e1550004	 cmp         r5, r4
  00154	e2866004	 add         r6, r6, #4
  00158	bafffff6	 blt         |$LL4@testHeap|
  0015c	ea000001	 b           |$LN2@testHeap|
  00160		 |$LN25@testHeap|

; 110  :             __D("error freeing blocks\n");

  00160	e59f0018	 ldr         r0, [pc, #0x18]
  00164	eb000000	 bl          NKDbgPrintfW
  00168		 |$LN2@testHeap|

; 111  :             break;
; 112  :         }
; 113  :     }
; 114  : 
; 115  :     __D("...done\n");

  00168	e59f000c	 ldr         r0, [pc, #0xC]
  0016c	eb000000	 bl          NKDbgPrintfW

; 116  : }

  00170	e28dd00c	 add         sp, sp, #0xC
  00174	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00178	e12fff1e	 bx          lr
  0017c		 |$LN33@testHeap|
  0017c		 |$LN34@testHeap|
  0017c	00000000	 DCD         |??_C@_1CK@EKFKJOAO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?6?$AA?$AA@|
  00180		 |$LN35@testHeap|
  00180	00000000	 DCD         |??_C@_1EE@MIKINHML@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs@|
  00184		 |$LN36@testHeap|
  00184	00000000	 DCD         |??_C@_1FK@JGGCDFCC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa@|
  00188		 |$LN37@testHeap|
  00188	00000000	 DCD         |??_C@_1GA@LJLCIILN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AA?9?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5@|
  0018c		 |$LN38@testHeap|
  0018c	00000000	 DCD         |??_C@_1FE@NOABKNPO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb@|
  00190		 |$LN39@testHeap|
  00190	00000000	 DCD         |??_C@_1EI@BKPLHBGB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?4@|
  00194		 |$LN40@testHeap|
  00194	00000000	 DCD         |??_C@_1JE@JENCBDEO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAi@|
  00198		 |$LN41@testHeap|
  00198	00000000	 DCD         |??_C@_1EG@JOPMKKAN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AA?4?$AA?4?$AA?4?$AAd?$AAo?$AAn?$AAe?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@|
  0019c		 |$LN42@testHeap|
  0019c	00000000	 DCD         |heap_ptrs|
  001a0		 |$LN43@testHeap|
  001a0	00000000	 DCD         |??_C@_1IE@CMLBLJDM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAb?$AAu?$AAf?$AAf@|
  001a4		 |$M36876|

			 ENDP  ; |testHeap|

	EXPORT	|testCache|
	EXPORT	|??_C@_1FO@LOGJMALI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@LIHDMFNK@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAr?$AAe?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@FHFEDGIC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAs?$AAo?$AA?5?$AAl?$AAo?$AAo?$AAk?$AA?5?$AAa?$AAt?$AA?5?$AAy?$AAo?$AAu?$AAr?$AA?5?$AAp?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@FJCHNFB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@GJPGAMJC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAt?$AAh?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@EIIBBOGD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@BGHLODNO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAe?$AAc?$AAo?$AAn?$AAd?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@HONHKAHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@NPCGMDIJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAf?$AAl?$AAu?$AAs?$AAh?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@NODFGNKJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAw?$AAr?$AAo?$AAt?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAt?$AAo?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@LCMIHFBH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAi?$AAn?$AAv?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc?$AAh?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@HBIBOILM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@CMKGCONF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@EPPOJJHN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAM?$AAe?$AAa?$AAs?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAp?$AAe?$AAr?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@DMOBBDFE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@CBOCBED@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAc?$AAa?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@GLDDPKCO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAo?$AAf?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@GCDNPCNE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@PNAMJAEN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@HKKKOAAM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@BPOMFHKH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAn@| [ DATA ] ; `string'
	IMPORT	|CMEM_allocPool|
	IMPORT	|CMEM_getPool|
	IMPORT	|CMEM_cacheInv|
	IMPORT	|CMEM_getPhys|
	IMPORT	|CMEM_alloc|
	IMPORT	|CMEM_DEFAULTPARAMS|

  00000			 AREA	 |.pdata|, PDATA
|$T36937| DCD	|$LN74@testCache|
	DCD	0x40012402

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@LOGJMALI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAb@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l", 0x0, "y", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "a", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "#"
	DCB	0x0, "x", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@LIHDMFNK@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAr?$AAe?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "e"
	DCB	0x0, "e", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "%", 0x0, "#", 0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@FHFEDGIC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAs?$AAo?$AA?5?$AAl?$AAo?$AAo?$AAk?$AA?5?$AAa?$AAt?$AA?5?$AAy?$AAo?$AAu?$AAr?$AA?5?$AAp?$AAo@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "s", 0x0, "o", 0x0, " ", 0x0, "l", 0x0, "o"
	DCB	0x0, "o", 0x0, "k", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "y", 0x0, "o", 0x0, "u", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "f", 0x0, "o", 0x0, " ", 0x0, "u", 0x0, "n", 0x0, "d"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "/", 0x0, "p", 0x0, "r"
	DCB	0x0, "o", 0x0, "c", 0x0, "/", 0x0, "c", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@FJCHNFB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "P"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "E"
	DCB	0x0, "N", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, "(", 0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "'", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, " ", 0x0, "/", 0x0, "p", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "/", 0x0, "c", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "'"
	DCB	0x0, " ", 0x0, "i", 0x0, "f", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "s", 0x0, "i", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, ")"
	DCB	0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@GJPGAMJC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAt?$AAh?$AAa?$AAt@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "G"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "a"
	DCB	0x0, "t", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "t", 0x0, "s"
	DCB	0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@EIIBBOGD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "a", 0x0, " ", 0x0, "p", 0x0, "o", 0x0, "o"
	DCB	0x0, "l", 0x0, " ", 0x0, "w", 0x0, "h", 0x0, "i", 0x0, "c"
	DCB	0x0, "h", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "t", 0x0, "s"
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@BGHLODNO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAe?$AAc?$AAo?$AAn?$AAd?$AA?5?$AAb?$AAu@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "c", 0x0, "o", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@HONHKAHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "%", 0x0, "p", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@NPCGMDIJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAf?$AAl?$AAu?$AAs?$AAh?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "-", 0x0, "f", 0x0, "l"
	DCB	0x0, "u", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, "*", 0x0, "p"
	DCB	0x0, "t", 0x0, "r", 0x0, "1", 0x0, "_", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@NODFGNKJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAw?$AAr?$AAo?$AAt?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAt?$AAo?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "w"
	DCB	0x0, "r", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "*", 0x0, "p", 0x0, "t", 0x0, "r", 0x0, "1"
	DCB	0x0, "_", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@LCMIHFBH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAi?$AAn?$AAv?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc?$AAh?$AAe@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "-", 0x0, "i", 0x0, "n"
	DCB	0x0, "v", 0x0, " ", 0x0, "*", 0x0, "p", 0x0, "t", 0x0, "r"
	DCB	0x0, "1", 0x0, "_", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@HBIBOILM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "-", 0x0, "M", 0x0, "-", 0x0, "W", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "%", 0x0, "l", 0x0, "x", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@CMKGCONF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "-", 0x0, "M", 0x0, "-", 0x0, "W", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "n", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "%", 0x0, "l"
	DCB	0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@EPPOJJHN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAM?$AAe?$AAa?$AAs?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAp?$AAe?$AAr?$AAf@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "M"
	DCB	0x0, "e", 0x0, "a", 0x0, "s", 0x0, "u", 0x0, "r", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "R", 0x0, "-", 0x0, "M"
	DCB	0x0, "-", 0x0, "W", 0x0, " ", 0x0, "p", 0x0, "e", 0x0, "r"
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "(", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "h", 0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "e", 0x0, " ", 0x0, "q", 0x0, "u", 0x0, "i"
	DCB	0x0, "c", 0x0, "k", 0x0, "e", 0x0, "r", 0x0, ")", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@DMOBBDFE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "n", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "s", 0x0, "o", 0x0, "u", 0x0, "r", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@CBOCBED@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAc?$AAa?$AAc@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "r", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@GLDDPKCO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAo?$AAf?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "i", 0x0, "c", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "o", 0x0, "f"
	DCB	0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "#", 0x0, "x"
	DCB	0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@GCDNPCNE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "a", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "o", 0x0, "f", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "%", 0x0, "#"
	DCB	0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@PNAMJAEN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "o", 0x0, "f"
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "#", 0x0, "x", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HKKKOAAM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAb@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@BPOMFHKH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAn@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "r", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "n", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |testCache| PROC

; 119  : {

  00000		 |$LN74@testCache|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M36934|
  00008	e1a05001	 mov         r5, r1
  0000c	e1a06000	 mov         r6, r0

; 120  :     unsigned int *ptr1_nocache = NULL;
; 121  :     unsigned int *ptr1_cache = NULL;
; 122  :     unsigned int *ptr1_dma = NULL;
; 123  :     unsigned int *ptr2 = NULL;
; 124  :     unsigned long physp;
; 125  :     unsigned long physp_dma;
; 126  :     unsigned long physp_nocache;
; 127  :     unsigned long physp_cache;
; 128  :     int poolid;
; 129  :     int i, j;
; 130  : //    struct timeval start_tv, end_tv;
; 131  : //    unsigned long diff;
; 132  :     int foo, bar;
; 133  :     CMEM_AllocParams params;
; 134  : 
; 135  :     __D("Allocating first noncached buffer.\n");

  00010	e59f0474	 ldr         r0, [pc, #0x474]
  00014	e3a07000	 mov         r7, #0
  00018	e3a0b000	 mov         r11, #0
  0001c	e3a09000	 mov         r9, #0
  00020	eb000000	 bl          NKDbgPrintfW

; 136  : 
; 137  :     /* First allocate a buffer from the pool that best fits */
; 138  :     ptr1_nocache = CMEM_alloc(size, NULL);

  00024	e3a01000	 mov         r1, #0
  00028	e1a00006	 mov         r0, r6
  0002c	eb000000	 bl          CMEM_alloc
  00030	e1b0a000	 movs        r10, r0

; 139  : 
; 140  :     if (ptr1_nocache == NULL) {
; 141  :         __D("Failed to allocate buffer of size %d\n", size);

  00034	059f043c	 ldreq       r0, [pc, #0x43C]
  00038	e1a01006	 mov         r1, r6
  0003c	0a0000f7	 beq         |$LN68@testCache|

; 142  :         goto cleanup;
; 143  :     }
; 144  : 
; 145  :     __D("Allocated buffer of size %d at address %#x.\n", size,
; 146  :            (unsigned int) ptr1_nocache);

  00040	e59f03fc	 ldr         r0, [pc, #0x3FC]
  00044	e1a0200a	 mov         r2, r10
  00048	eb000000	 bl          NKDbgPrintfW

; 147  : 
; 148  :     /* Find out and print the physical address of this buffer */
; 149  :     physp_nocache = CMEM_getPhys(ptr1_nocache);

  0004c	e1a0000a	 mov         r0, r10
  00050	eb000000	 bl          CMEM_getPhys
  00054	e1b03000	 movs        r3, r0
  00058	e58d3000	 str         r3, [sp]

; 150  : 
; 151  :     if (physp_nocache == 0) {

  0005c	1a000003	 bne         |$LN40@testCache|

; 152  :         __D("Failed to get physical address of buffer %#x\n",
; 153  :                 (unsigned int) ptr1_nocache);

  00060	e1a0100a	 mov         r1, r10
  00064		 |$LN71@testCache|
  00064	e59f041c	 ldr         r0, [pc, #0x41C]
  00068	eb000000	 bl          NKDbgPrintfW

; 154  :         goto cleanup;

  0006c	ea0000be	 b           |$cleanup$36668|
  00070		 |$LN40@testCache|

; 155  :     }
; 156  : 
; 157  :     __D("Physical address of allocated buffer is %#x.\n",
; 158  :            (unsigned int) physp_nocache);

  00070	e59f03c8	 ldr         r0, [pc, #0x3C8]
  00074	e1a01003	 mov         r1, r3
  00078	eb000000	 bl          NKDbgPrintfW

; 159  : 
; 160  :     /* Write some data into this buffer */
; 161  :     for (i=0; i < size / sizeof(int) ; i++) {

  0007c	e1b08126	 movs        r8, r6, lsr #2
  00080	0a000007	 beq         |$LN61@testCache|
  00084	e59f13f8	 ldr         r1, [pc, #0x3F8]
  00088	e1a0300a	 mov         r3, r10
  0008c	e1b02008	 movs        r2, r8
  00090	0a000003	 beq         |$LN61@testCache|

; 155  :     }
; 156  : 
; 157  :     __D("Physical address of allocated buffer is %#x.\n",
; 158  :            (unsigned int) physp_nocache);

  00094	e08a2102	 add         r2, r10, r2, lsl #2
  00098		 |$LN60@testCache|
  00098	e4831004	 str         r1, [r3], #4
  0009c	e1530002	 cmp         r3, r2
  000a0	1afffffc	 bne         |$LN60@testCache|
  000a4		 |$LN61@testCache|

; 162  :         ptr1_nocache[i] = 0xbeefbeef;
; 163  :     }
; 164  : 
; 165  :     __D("Allocating first cached buffer.\n");

  000a4	e59f03d4	 ldr         r0, [pc, #0x3D4]
  000a8	eb000000	 bl          NKDbgPrintfW

; 166  : 
; 167  :     /* First allocate a buffer from the pool that best fits */
; 168  :     params = CMEM_DEFAULTPARAMS;

  000ac	e59f13c8	 ldr         r1, [pc, #0x3C8]

; 169  :     params.flags = CMEM_CACHED;

  000b0	e3a00b02	 mov         r0, #2, 22

; 170  :     ptr1_cache = CMEM_alloc2(block, size, &params);

  000b4	e28d2008	 add         r2, sp, #8
  000b8	e5913004	 ldr         r3, [r1, #4]
  000bc	e591e000	 ldr         lr, [r1]
  000c0	e5914008	 ldr         r4, [r1, #8]
  000c4	e58d300c	 str         r3, [sp, #0xC]
  000c8	e58d000c	 str         r0, [sp, #0xC]
  000cc	e1a00005	 mov         r0, r5
  000d0	e1a01006	 mov         r1, r6
  000d4	e58de008	 str         lr, [sp, #8]
  000d8	e58d4010	 str         r4, [sp, #0x10]
  000dc	eb000000	 bl          CMEM_alloc2
  000e0	e1b07000	 movs        r7, r0

; 171  : 
; 172  :     if (ptr1_cache == NULL) {
; 173  :         __D("Failed to allocate buffer of size %d\n", size);

  000e4	e1a01006	 mov         r1, r6
  000e8	1a000002	 bne         |$LN36@testCache|
  000ec		 |$LN70@testCache|
  000ec	e59f0384	 ldr         r0, [pc, #0x384]
  000f0	eb000000	 bl          NKDbgPrintfW
  000f4	ea00009c	 b           |$cleanup$36668|
  000f8		 |$LN36@testCache|

; 174  :         goto cleanup;
; 175  :     }
; 176  : 
; 177  :     __D("Allocated buffer of size %d at address %#x.\n", size,
; 178  :            (unsigned int) ptr1_cache);

  000f8	e59f0344	 ldr         r0, [pc, #0x344]
  000fc	e1a02007	 mov         r2, r7
  00100	eb000000	 bl          NKDbgPrintfW

; 179  : 
; 180  :     /* Find out and print the physical address of this buffer */
; 181  :     physp_cache = CMEM_getPhys(ptr1_cache);

  00104	e1a00007	 mov         r0, r7
  00108	eb000000	 bl          CMEM_getPhys
  0010c	e1b05000	 movs        r5, r0
  00110	e58d5004	 str         r5, [sp, #4]

; 182  : 
; 183  :     if (physp_cache == 0) {
; 184  :         __D("Failed to get physical address of buffer %#x\n",
; 185  :                 (unsigned int) ptr1_cache);

  00114	01a01007	 moveq       r1, r7
  00118	0affffd1	 beq         |$LN71@testCache|

; 186  :         goto cleanup;
; 187  :     }
; 188  : 
; 189  :     __D("Physical address of allocated buffer is %#x.\n",
; 190  :            (unsigned int) physp_cache);

  0011c	e59f031c	 ldr         r0, [pc, #0x31C]
  00120	e1a01005	 mov         r1, r5
  00124	eb000000	 bl          NKDbgPrintfW

; 191  : 
; 192  :     /* Write some data into this buffer */
; 193  :     for (i = 0; i < size / sizeof(int); i++) {

  00128	e59f4344	 ldr         r4, [pc, #0x344]
  0012c	e3580000	 cmp         r8, #0
  00130	0a000006	 beq         |$LN63@testCache|
  00134	e1a03007	 mov         r3, r7
  00138	e1b02008	 movs        r2, r8
  0013c	0a000003	 beq         |$LN63@testCache|

; 186  :         goto cleanup;
; 187  :     }
; 188  : 
; 189  :     __D("Physical address of allocated buffer is %#x.\n",
; 190  :            (unsigned int) physp_cache);

  00140	e0872102	 add         r2, r7, r2, lsl #2
  00144		 |$LN62@testCache|
  00144	e4834004	 str         r4, [r3], #4
  00148	e1530002	 cmp         r3, r2
  0014c	1afffffc	 bne         |$LN62@testCache|
  00150		 |$LN63@testCache|

; 194  :         ptr1_cache[i] = 0x0dead1ce;
; 195  :     }
; 196  : 
; 197  :     __D("Allocating noncached DMA source buffer.\n");

  00150	e59f0318	 ldr         r0, [pc, #0x318]
  00154	eb000000	 bl          NKDbgPrintfW

; 198  : 
; 199  :     /* Allocate a noncached buffer for the DMA source */
; 200  :     ptr1_dma = CMEM_alloc(size, NULL);

  00158	e3a01000	 mov         r1, #0
  0015c	e1a00006	 mov         r0, r6
  00160	eb000000	 bl          CMEM_alloc
  00164	e1b0b000	 movs        r11, r0

; 201  : 
; 202  :     if (ptr1_dma == NULL) {
; 203  :         __D("Failed to allocate buffer of size %d\n", size);

  00168	e1a01006	 mov         r1, r6

; 204  :         goto cleanup;

  0016c	0affffde	 beq         |$LN70@testCache|

; 205  :     }
; 206  : 
; 207  :     __D("Allocated buffer of size %d at address %#x.\n", size,
; 208  :            (unsigned int) ptr1_dma);

  00170	e59f02cc	 ldr         r0, [pc, #0x2CC]
  00174	e1a0200b	 mov         r2, r11
  00178	eb000000	 bl          NKDbgPrintfW

; 209  : 
; 210  :     /* Find out and print the physical address of this buffer */
; 211  :     physp_dma = CMEM_getPhys(ptr1_dma);

  0017c	e1a0000b	 mov         r0, r11
  00180	eb000000	 bl          CMEM_getPhys
  00184	e3500000	 cmp         r0, #0

; 212  : 
; 213  :     if (physp_dma == 0) {
; 214  :         __D("Failed to get physical address of buffer %#x\n",
; 215  :                 (unsigned int) ptr1_dma);

  00188	01a0100b	 moveq       r1, r11
  0018c	0affffb4	 beq         |$LN71@testCache|

; 216  :         goto cleanup;
; 217  :     }
; 218  : 
; 219  :     __D("Physical address of allocated buffer is %#x.\n",
; 220  :            (unsigned int) physp_dma);

  00190	e1a01000	 mov         r1, r0
  00194	e59f02a4	 ldr         r0, [pc, #0x2A4]
  00198	eb000000	 bl          NKDbgPrintfW

; 221  : 
; 222  :     /* Initialize DMA source buffer */
; 223  :     for (i = 0; i < size / sizeof(int); i++) {

  0019c	e3580000	 cmp         r8, #0
  001a0	0a000006	 beq         |$LN65@testCache|
  001a4	e1a03007	 mov         r3, r7
  001a8	e1b02008	 movs        r2, r8
  001ac	0a000003	 beq         |$LN65@testCache|

; 216  :         goto cleanup;
; 217  :     }
; 218  : 
; 219  :     __D("Physical address of allocated buffer is %#x.\n",
; 220  :            (unsigned int) physp_dma);

  001b0	e0872102	 add         r2, r7, r2, lsl #2
  001b4		 |$LN64@testCache|
  001b4	e4834004	 str         r4, [r3], #4
  001b8	e1530002	 cmp         r3, r2
  001bc	1afffffc	 bne         |$LN64@testCache|
  001c0		 |$LN65@testCache|

; 224  :         ptr1_cache[i] = 0x0dead1ce;
; 225  :     }
; 226  : 
; 227  :     /*
; 228  :      * Measure the write performance of each buffer to check that one
; 229  :      * is cached and the other isn't.
; 230  :      */
; 231  :     __D("Measuring R-M-W performance (cached should be quicker).\n");

  001c0	e59f02a4	 ldr         r0, [pc, #0x2A4]
  001c4	eb000000	 bl          NKDbgPrintfW
  001c8	e59d9000	 ldr         r9, [sp]
  001cc	e3a04003	 mov         r4, #3
  001d0		 |$LL26@testCache|

; 233  :         __D("R-M-W noncached buffer %lx\n", physp_nocache);

  001d0	e59f0290	 ldr         r0, [pc, #0x290]
  001d4	e1a01009	 mov         r1, r9
  001d8	eb000000	 bl          NKDbgPrintfW

; 234  :         //gettimeofday(&start_tv, NULL);
; 235  :         for (i = 0; i < (size / sizeof(int)); i += 1) {

  001dc	e3580000	 cmp         r8, #0
  001e0	0a000006	 beq         |$LN21@testCache|
  001e4	e1a0200a	 mov         r2, r10
  001e8	e1a01008	 mov         r1, r8
  001ec		 |$LL23@testCache|

; 236  :             ptr1_nocache[i] += 1;

  001ec	e5923000	 ldr         r3, [r2]
  001f0	e2511001	 subs        r1, r1, #1
  001f4	e2833001	 add         r3, r3, #1
  001f8	e4823004	 str         r3, [r2], #4
  001fc	1afffffa	 bne         |$LL23@testCache|
  00200		 |$LN21@testCache|

; 237  :         }
; 238  :         //gettimeofday(&end_tv, NULL);
; 239  :         //diff = end_tv.tv_usec - start_tv.tv_usec;
; 240  :         //if (end_tv.tv_sec > start_tv.tv_sec) {
; 241  :         //    diff += (end_tv.tv_sec - start_tv.tv_sec) * 1000000;
; 242  :         //}
; 243  :         //__D("  diff=%ld\n", diff);
; 244  : 
; 245  :         __D("R-M-W cached buffer %lx\n", physp_cache);

  00200	e59f024c	 ldr         r0, [pc, #0x24C]
  00204	e1a01005	 mov         r1, r5
  00208	eb000000	 bl          NKDbgPrintfW

; 246  :         //gettimeofday(&start_tv, NULL);
; 247  :         for (i = 0; i < (size / sizeof(int)); i += 1) {

  0020c	e3580000	 cmp         r8, #0
  00210	0a000006	 beq         |$LN25@testCache|
  00214	e1a02007	 mov         r2, r7
  00218	e1a01008	 mov         r1, r8
  0021c		 |$LL20@testCache|

; 248  :             ptr1_cache[i] += 1;

  0021c	e5923000	 ldr         r3, [r2]
  00220	e2511001	 subs        r1, r1, #1
  00224	e2833001	 add         r3, r3, #1
  00228	e4823004	 str         r3, [r2], #4
  0022c	1afffffa	 bne         |$LL20@testCache|
  00230		 |$LN25@testCache|

; 232  :     for (j = 0; j < 3; j++) {

  00230	e2544001	 subs        r4, r4, #1
  00234	1affffe5	 bne         |$LL26@testCache|

; 249  :         }
; 250  :         //gettimeofday(&end_tv, NULL);
; 251  :         //diff = end_tv.tv_usec - start_tv.tv_usec;
; 252  :         //if (end_tv.tv_sec > start_tv.tv_sec) {
; 253  :         //    diff += (end_tv.tv_sec - start_tv.tv_sec) * 1000000;
; 254  :         //}
; 255  :         //__D("  diff=%ld\n", diff);
; 256  :     }
; 257  : 
; 258  :     __D("Invalidate cached buffer %p\n", ptr1_cache);

  00238	e59f0224	 ldr         r0, [pc, #0x224]
  0023c	e1a01007	 mov         r1, r7
  00240	eb000000	 bl          NKDbgPrintfW

; 259  : 
; 260  :     foo = *ptr1_cache;

  00244	e5974000	 ldr         r4, [r7]

; 261  :     bar = foo;
; 262  :     bar++;
; 263  :     *ptr1_cache = bar;
; 264  :     CMEM_cacheInv(ptr1_cache, size);

  00248	e1a01006	 mov         r1, r6
  0024c	e1a00007	 mov         r0, r7
  00250	e2845001	 add         r5, r4, #1
  00254	e5875000	 str         r5, [r7]
  00258	eb000000	 bl          CMEM_cacheInv

; 265  :     __D("post-flush *ptr1_cache=0x%x\n", foo);

  0025c	e59f01fc	 ldr         r0, [pc, #0x1FC]
  00260	e1a01004	 mov         r1, r4
  00264	eb000000	 bl          NKDbgPrintfW

; 266  :     __D("wrote 0x%x to *ptr1_cache\n", bar);

  00268	e59f01ec	 ldr         r0, [pc, #0x1EC]
  0026c	e1a01005	 mov         r1, r5
  00270	eb000000	 bl          NKDbgPrintfW

; 267  :     __D("post-inv *ptr1_cache=0x%x\n", *ptr1_cache);

  00274	e5971000	 ldr         r1, [r7]
  00278	e59f01d8	 ldr         r0, [pc, #0x1D8]
  0027c	eb000000	 bl          NKDbgPrintfW

; 268  : 
; 269  :     __D("R-M-W cached buffer %lx\n", physp_cache);

  00280	e59d1004	 ldr         r1, [sp, #4]
  00284	e59f01c8	 ldr         r0, [pc, #0x1C8]
  00288	eb000000	 bl          NKDbgPrintfW

; 270  :     //gettimeofday(&start_tv, NULL);
; 271  :     for (i = 0; i < (size / sizeof(int)); i += 1) {

  0028c	e3580000	 cmp         r8, #0
  00290	e3a09000	 mov         r9, #0
  00294	0a000006	 beq         |$LN15@testCache|
  00298	e1a02007	 mov         r2, r7
  0029c	e1a01008	 mov         r1, r8
  002a0		 |$LL17@testCache|

; 272  :         ptr1_cache[i] += 1;

  002a0	e5923000	 ldr         r3, [r2]
  002a4	e2511001	 subs        r1, r1, #1
  002a8	e2833001	 add         r3, r3, #1
  002ac	e4823004	 str         r3, [r2], #4
  002b0	1afffffa	 bne         |$LL17@testCache|
  002b4		 |$LN15@testCache|

; 273  :     }
; 274  :     //gettimeofday(&end_tv, NULL);
; 275  :     //diff = end_tv.tv_usec - start_tv.tv_usec;
; 276  :     //if (end_tv.tv_sec > start_tv.tv_sec) {
; 277  :     //    diff += (end_tv.tv_sec - start_tv.tv_sec) * 1000000;
; 278  :     //}
; 279  :     //__D("  diff=%ld\n", diff);
; 280  : 
; 281  :     /*
; 282  :      * Now allocate another buffer by first finding out which pool that fits
; 283  :      * best, and then explicitly allocating from that pool. This gives more
; 284  :      * control at the cost of an extra function call, but essentially does
; 285  :      * the same thing as the above CMEM_alloc() call.
; 286  :      */
; 287  :     __D("Allocating second buffer.\n");

  002b4	e59f0194	 ldr         r0, [pc, #0x194]
  002b8	eb000000	 bl          NKDbgPrintfW

; 288  : 
; 289  :     poolid = CMEM_getPool(size);

  002bc	e1a00006	 mov         r0, r6
  002c0	eb000000	 bl          CMEM_getPool
  002c4	e1a04000	 mov         r4, r0

; 290  : 
; 291  :     if (poolid == -1) {

  002c8	e3740001	 cmn         r4, #1
  002cc	1a000003	 bne         |$LN14@testCache|

; 292  :         __D("Failed to get a pool which fits size %d\n", size);

  002d0	e59f0174	 ldr         r0, [pc, #0x174]
  002d4	e1a01006	 mov         r1, r6
  002d8	eb000000	 bl          NKDbgPrintfW
  002dc	ea000022	 b           |$cleanup$36668|
  002e0		 |$LN14@testCache|

; 293  :         goto cleanup;
; 294  :     }
; 295  : 
; 296  :     __D("Got a pool (%d) that fits the size %d\n", poolid, size);

  002e0	e59f0160	 ldr         r0, [pc, #0x160]
  002e4	e1a02006	 mov         r2, r6
  002e8	e1a01004	 mov         r1, r4
  002ec	eb000000	 bl          NKDbgPrintfW

; 297  : 
; 298  :     ptr2 = CMEM_allocPool(poolid, NULL);

  002f0	e3a01000	 mov         r1, #0
  002f4	e1a00004	 mov         r0, r4
  002f8	eb000000	 bl          CMEM_allocPool
  002fc	e1b09000	 movs        r9, r0

; 299  : 
; 300  :     if (ptr2 == NULL) {
; 301  :         __D("Failed to allocate buffer of size %d\n", size);

  00300	e1a01006	 mov         r1, r6

; 302  :         goto cleanup;

  00304	0affff78	 beq         |$LN70@testCache|

; 303  :     }
; 304  : 
; 305  :     __D("Allocated buffer of size %d at address %#x.\n", size,
; 306  :            (unsigned int) ptr2);

  00308	e59f0134	 ldr         r0, [pc, #0x134]
  0030c	e1a02009	 mov         r2, r9
  00310	eb000000	 bl          NKDbgPrintfW

; 307  : 
; 308  :     /* Find out and print the physical address of this buffer */
; 309  :     physp = CMEM_getPhys(ptr2);

  00314	e1a00009	 mov         r0, r9
  00318	eb000000	 bl          CMEM_getPhys
  0031c	e3500000	 cmp         r0, #0

; 310  : 
; 311  :     if (physp == 0) {
; 312  :         __D("Failed to get physical address of buffer %#x\n",
; 313  :                 (unsigned int) ptr2);

  00320	01a01009	 moveq       r1, r9
  00324	0affff4e	 beq         |$LN71@testCache|

; 314  :         goto cleanup;
; 315  :     }
; 316  : 
; 317  :     __D("Physical address of allocated buffer is %#x.\n",
; 318  :            (unsigned int) physp);

  00328	e1a01000	 mov         r1, r0
  0032c	e59f010c	 ldr         r0, [pc, #0x10C]
  00330	eb000000	 bl          NKDbgPrintfW

; 319  : 
; 320  :     /* Write some data into this buffer */
; 321  :     for (i=0; i < size / sizeof(int); i++) {

  00334	e3580000	 cmp         r8, #0
  00338	0a000006	 beq         |$LN67@testCache|
  0033c	e3e03745	 mvn         r3, #0x45, 14
  00340	e2231f45	 eor         r1, r3, #0x45, 30
  00344	e1a03009	 mov         r3, r9
  00348	e0892108	 add         r2, r9, r8, lsl #2
  0034c		 |$LN66@testCache|
  0034c	e4831004	 str         r1, [r3], #4
  00350	e1530002	 cmp         r3, r2
  00354	1afffffc	 bne         |$LN66@testCache|
  00358		 |$LN67@testCache|

; 322  :         ptr2[i] = 0xfeebfeeb;
; 323  :     }
; 324  : 
; 325  :     //__D("Inspect your memory map in /proc/%d/maps.\n", getpid());
; 326  :     __D("Also look at your pool info under /proc/cmem\n");

  00358	e59f00dc	 ldr         r0, [pc, #0xDC]
  0035c	eb000000	 bl          NKDbgPrintfW

; 327  :     __D("Press ENTER to exit (after 'cat /proc/cmem' if desired).\n");

  00360	e59f00d0	 ldr         r0, [pc, #0xD0]
  00364	eb000000	 bl          NKDbgPrintfW

; 328  :     getchar();

  00368	eb000000	 bl          getchar
  0036c		 |$cleanup$36668|

; 329  : 
; 330  : cleanup:
; 331  :     if (ptr1_nocache != NULL) {
; 332  :         if (CMEM_free(ptr1_nocache, NULL) < 0) {

  0036c	e3a01000	 mov         r1, #0
  00370	e1a0000a	 mov         r0, r10
  00374	eb000000	 bl          CMEM_free
  00378	e3500000	 cmp         r0, #0

; 333  :             __D("Failed to free buffer at %#x\n",
; 334  :                     (unsigned int) ptr1_nocache);

  0037c	459f00b0	 ldrmi       r0, [pc, #0xB0]
  00380	41a0100a	 movmi       r1, r10
  00384	4b000000	 blmi        NKDbgPrintfW

; 335  :         }
; 336  :         __D("Successfully freed buffer at %#x.\n",
; 337  :                (unsigned int) ptr1_nocache);

  00388	e59f00a0	 ldr         r0, [pc, #0xA0]
  0038c	e1a0100a	 mov         r1, r10
  00390	eb000000	 bl          NKDbgPrintfW

; 338  :     }
; 339  : 
; 340  :     if (ptr1_cache != NULL) {

  00394	e3570000	 cmp         r7, #0
  00398	0a000009	 beq         |$LN6@testCache|

; 341  :         if (CMEM_free(ptr1_cache, &params) < 0) {

  0039c	e28d1008	 add         r1, sp, #8
  003a0	e1a00007	 mov         r0, r7
  003a4	eb000000	 bl          CMEM_free
  003a8	e3500000	 cmp         r0, #0

; 342  :             __D("Failed to free buffer at %#x\n",
; 343  :                     (unsigned int) ptr1_cache);

  003ac	459f0080	 ldrmi       r0, [pc, #0x80]
  003b0	41a01007	 movmi       r1, r7
  003b4	4b000000	 blmi        NKDbgPrintfW

; 344  :         }
; 345  :         __D("Successfully freed buffer at %#x.\n",
; 346  :                (unsigned int) ptr1_cache);

  003b8	e59f0070	 ldr         r0, [pc, #0x70]
  003bc	e1a01007	 mov         r1, r7
  003c0	eb000000	 bl          NKDbgPrintfW
  003c4		 |$LN6@testCache|

; 347  :     }
; 348  : 
; 349  :     if (ptr1_dma != NULL) {

  003c4	e35b0000	 cmp         r11, #0
  003c8	0a000009	 beq         |$LN4@testCache|

; 350  :         if (CMEM_free(ptr1_dma, NULL) < 0) {

  003cc	e3a01000	 mov         r1, #0
  003d0	e1a0000b	 mov         r0, r11
  003d4	eb000000	 bl          CMEM_free
  003d8	e3500000	 cmp         r0, #0

; 351  :             __D("Failed to free buffer at %#x\n",
; 352  :                     (unsigned int) ptr1_dma);

  003dc	459f0050	 ldrmi       r0, [pc, #0x50]
  003e0	41a0100b	 movmi       r1, r11
  003e4	4b000000	 blmi        NKDbgPrintfW

; 353  :         }
; 354  :         __D("Successfully freed buffer at %#x.\n",
; 355  :                (unsigned int) ptr1_dma);

  003e8	e59f0040	 ldr         r0, [pc, #0x40]
  003ec	e1a0100b	 mov         r1, r11
  003f0	eb000000	 bl          NKDbgPrintfW
  003f4		 |$LN4@testCache|

; 356  :     }
; 357  : 
; 358  :     if (ptr2 != NULL) {

  003f4	e3590000	 cmp         r9, #0
  003f8	0a000009	 beq         |$LN2@testCache|

; 359  :         if (CMEM_free(ptr2, NULL) < 0) {

  003fc	e3a01000	 mov         r1, #0
  00400	e1a00009	 mov         r0, r9
  00404	eb000000	 bl          CMEM_free
  00408	e3500000	 cmp         r0, #0

; 360  :             __D("Failed to free buffer at %#x\n",
; 361  :                     (unsigned int) ptr2);

  0040c	459f0020	 ldrmi       r0, [pc, #0x20]
  00410	41a01009	 movmi       r1, r9
  00414	4b000000	 blmi        NKDbgPrintfW

; 362  :         }
; 363  :         __D("Successfully freed buffer at %#x.\n",
; 364  :                (unsigned int) ptr2);

  00418	e59f0010	 ldr         r0, [pc, #0x10]
  0041c	e1a01009	 mov         r1, r9
  00420		 |$LN68@testCache|
  00420	eb000000	 bl          NKDbgPrintfW
  00424		 |$LN2@testCache|

; 365  :     }
; 366  : }

  00424	e28dd014	 add         sp, sp, #0x14
  00428	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0042c	e12fff1e	 bx          lr
  00430		 |$LN75@testCache|
  00430		 |$LN76@testCache|
  00430	00000000	 DCD         |??_C@_1FO@LOGJMALI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAb@|
  00434		 |$LN77@testCache|
  00434	00000000	 DCD         |??_C@_1FE@LIHDMFNK@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAr?$AAe?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe@|
  00438		 |$LN78@testCache|
  00438	00000000	 DCD         |??_C@_1IM@FJCHNFB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAE?$AAN?$AAT?$AAE?$AAR?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?5@|
  0043c		 |$LN79@testCache|
  0043c	00000000	 DCD         |??_C@_1HE@FHFEDGIC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAs?$AAo?$AA?5?$AAl?$AAo?$AAo?$AAk?$AA?5?$AAa?$AAt?$AA?5?$AAy?$AAo?$AAu?$AAr?$AA?5?$AAp?$AAo@|
  00440		 |$LN80@testCache|
  00440	00000000	 DCD         |??_C@_1HE@GLDDPKCO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAo?$AAf?$AA?5@|
  00444		 |$LN81@testCache|
  00444	00000000	 DCD         |??_C@_1HC@PNAMJAEN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5@|
  00448		 |$LN82@testCache|
  00448	00000000	 DCD         |??_C@_1GG@GJPGAMJC@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAt?$AAh?$AAa?$AAt@|
  0044c		 |$LN83@testCache|
  0044c	00000000	 DCD         |??_C@_1GK@EIIBBOGD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa?$AA?5?$AAp?$AAo?$AAo?$AAl@|
  00450		 |$LN84@testCache|
  00450	00000000	 DCD         |??_C@_1EO@BGHLODNO@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAe?$AAc?$AAo?$AAn?$AAd?$AA?5?$AAb?$AAu@|
  00454		 |$LN85@testCache|
  00454	00000000	 DCD         |??_C@_1EK@HBIBOILM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5@|
  00458		 |$LN86@testCache|
  00458	00000000	 DCD         |??_C@_1EO@LCMIHFBH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAi?$AAn?$AAv?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc?$AAh?$AAe@|
  0045c		 |$LN87@testCache|
  0045c	00000000	 DCD         |??_C@_1EO@NODFGNKJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAw?$AAr?$AAo?$AAt?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAt?$AAo?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_@|
  00460		 |$LN88@testCache|
  00460	00000000	 DCD         |??_C@_1FC@NPCGMDIJ@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAp?$AAo?$AAs?$AAt?$AA?9?$AAf?$AAl?$AAu?$AAs?$AAh?$AA?5?$AA?$CK?$AAp?$AAt?$AAr?$AA1?$AA_?$AAc?$AAa?$AAc@|
  00464		 |$LN89@testCache|
  00464	00000000	 DCD         |??_C@_1FC@HONHKAHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu@|
  00468		 |$LN90@testCache|
  00468	00000000	 DCD         |??_C@_1FA@CMKGCONF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf@|
  0046c		 |$LN91@testCache|
  0046c	00000000	 DCD         |??_C@_1IK@EPPOJJHN@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAM?$AAe?$AAa?$AAs?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAR?$AA?9?$AAM?$AA?9?$AAW?$AA?5?$AAp?$AAe?$AAr?$AAf@|
  00470		 |$LN92@testCache|
  00470	00000000	 DCD         |??_C@_1GK@DMOBBDFE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AAc?$AAa?$AAc?$AAh?$AAe?$AAd@|
  00474		 |$LN93@testCache|
  00474	0dead1ce	 DCD         0xdead1ce
  00478		 |$LN94@testCache|
  00478	00000000	 DCD         |??_C@_1GE@HKKKOAAM@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAb@|
  0047c		 |$LN95@testCache|
  0047c	00000000	 DCD         |CMEM_DEFAULTPARAMS|
  00480		 |$LN96@testCache|
  00480	00000000	 DCD         |??_C@_1FK@CBOCBED@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAc?$AAa?$AAc@|
  00484		 |$LN97@testCache|
  00484	beefbeef	 DCD         0xbeefbeef
  00488		 |$LN98@testCache|
  00488	00000000	 DCD         |??_C@_1HE@GCDNPCNE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc@|
  0048c		 |$LN99@testCache|
  0048c	00000000	 DCD         |??_C@_1GA@BPOMFHKH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAn@|
  00490		 |$M36935|

			 ENDP  ; |testCache|

	EXPORT	|main|
	EXPORT	|??_C@_1GA@PCBOKHKI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@JFPDAKOB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA1?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@LAJHEPBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@CLDCADHL@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@BFDEAPHH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@PMBGPOND@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@DLPIFJHF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA0?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@JJHBMFJF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@KKGKPOBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@JEJAOPHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@DDGKLPOD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?4?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@EKHBALIP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@EFKHFNKP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAU?$AAs?$AAa?$AAg?$AAe?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DM?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf@| [ DATA ] ; `string'
	IMPORT	|CMEM_exit|
	IMPORT	|CMEM_getBlockAttrs|
	IMPORT	|CMEM_getVersion|
	IMPORT	|CMEM_init|
	IMPORT	|atoi|
	IMPORT	|exit|

  00000			 AREA	 |.pdata|, PDATA
|$T36973| DCD	|$LN13@main|
	DCD	0x40005c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@PCBOKHKI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "C", 0x0, "M"
	DCB	0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@JFPDAKOB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA1?$AA?3@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "b"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "1"
	DCB	0x0, ":", 0x0, " ", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "l", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@LAJHEPBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "i", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "0", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@CLDCADHL@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "i", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "1", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@BFDEAPHH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "i", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "h", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "w"
	DCB	0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "g", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, " ", 0x0, "0", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@PMBGPOND@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "r", 0x0, "i", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "C", 0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "1", 0x0, " ", 0x0, "b", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@DLPIFJHF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA0?$AA?3@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "b"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "0"
	DCB	0x0, ":", 0x0, " ", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "l", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@JJHBMFJF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "r", 0x0, "i", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "C", 0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "0", 0x0, " ", 0x0, "b", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@KKGKPOBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@JEJAOPHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "r", 0x0, "i", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "C", 0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@DDGKLPOD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?4?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@EKHBALIP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "C", 0x0, "M", 0x0, "E", 0x0, "M"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@EFKHFNKP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAU?$AAs?$AAa?$AAg?$AAe?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DM?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf@| DCB "C"
	DCB	0x0, "M", 0x0, "E", 0x0, "M", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "b", 0x0, "u", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "U"
	DCB	0x0, "s", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "<", 0x0, "N", 0x0, "u"
	DCB	0x0, "m", 0x0, "b", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "o"
	DCB	0x0, "f", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, ">", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |main|	 PROC

; 369  : {

  00000		 |$LN13@main|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M36970|

; 370  :     int size;
; 371  :     int version;
; 372  :     CMEM_BlockAttrs attrs;
; 373  : 
; 374  :     DebugBreak();

  00008	e6000010	 __debugbreak_ce

; 375  : 
; 376  :     if (ARGC != 2) {

  0000c	e59f2158	 ldr         r2, [pc, #0x158]
  00010	e5923000	 ldr         r3, [r2]
  00014	e3530002	 cmp         r3, #2
  00018	0a000004	 beq         |$LN6@main|

; 377  :         __D("Usage: %s <Number of bytes to allocate>\n", ARGV[0]);

  0001c	e5921004	 ldr         r1, [r2, #4]
  00020	e59f0140	 ldr         r0, [pc, #0x140]
  00024	eb000000	 bl          NKDbgPrintfW

; 378  :         exit(EXIT_FAILURE);

  00028	e3a00001	 mov         r0, #1
  0002c	eb000000	 bl          exit
  00030		 |$LN14@main|
  00030		 |$LN6@main|

; 379  :     }
; 380  : 
; 381  :     size = atoi(ARGV[1]);

  00030	e5920008	 ldr         r0, [r2, #8]
  00034	eb000000	 bl          atoi
  00038	e1a05000	 mov         r5, r0

; 382  : 
; 383  :     /* First initialize the CMEM module */
; 384  :     if (CMEM_init() == -1) {

  0003c	eb000000	 bl          CMEM_init
  00040	e3700001	 cmn         r0, #1
  00044	1a000003	 bne         |$LN5@main|

; 385  :         __D("Failed to initialize CMEM\n");

  00048	e59f0114	 ldr         r0, [pc, #0x114]
  0004c	eb000000	 bl          NKDbgPrintfW

; 386  :         exit(EXIT_FAILURE);

  00050	e3a00001	 mov         r0, #1
  00054	eb000000	 bl          exit
  00058		 |$LN15@main|
  00058		 |$LN5@main|

; 387  :     }
; 388  : 
; 389  :     __D("CMEM initialized.\n");

  00058	e59f0100	 ldr         r0, [pc, #0x100]
  0005c	eb000000	 bl          NKDbgPrintfW

; 390  : 
; 391  :     version = CMEM_getVersion();

  00060	eb000000	 bl          CMEM_getVersion
  00064	e1a04000	 mov         r4, r0

; 392  :     if (version == -1) {

  00068	e3740001	 cmn         r4, #1

; 393  :         __D("Failed to retrieve CMEM version\n");

  0006c	059f00e8	 ldreq       r0, [pc, #0xE8]
  00070	0b000000	 bleq        NKDbgPrintfW

; 394  :     }
; 395  :     __D("CMEM version = 0x%x\n", version);

  00074	e59f00dc	 ldr         r0, [pc, #0xDC]
  00078	e1a01004	 mov         r1, r4
  0007c	eb000000	 bl          NKDbgPrintfW

; 396  : 
; 397  :     if (CMEM_getBlockAttrs(0, &attrs) == -1) {

  00080	e28d1000	 add         r1, sp, #0
  00084	e3a00000	 mov         r0, #0
  00088	eb000000	 bl          CMEM_getBlockAttrs
  0008c	e3700001	 cmn         r0, #1

; 398  :         __D("Failed to retrieve CMEM memory block 0 bounds\n");

  00090	059f00bc	 ldreq       r0, [pc, #0xBC]
  00094	0b000000	 bleq        NKDbgPrintfW

; 399  :     }
; 400  :     __D("CMEM memory block 0: phys start = 0x%lx, size = 0x%x\n",
; 401  :            attrs.phys_base, attrs.size);

  00098	e59d2004	 ldr         r2, [sp, #4]
  0009c	e59d1000	 ldr         r1, [sp]
  000a0	e59f00a8	 ldr         r0, [pc, #0xA8]
  000a4	eb000000	 bl          NKDbgPrintfW

; 402  : 
; 403  :     if (CMEM_getBlockAttrs(1, &attrs) == -1) {

  000a8	e28d1000	 add         r1, sp, #0
  000ac	e3a00001	 mov         r0, #1
  000b0	eb000000	 bl          CMEM_getBlockAttrs
  000b4	e3700001	 cmn         r0, #1

; 404  :         __D("Failed to retrieve CMEM memory block 1 bounds\n");

  000b8	059f008c	 ldreq       r0, [pc, #0x8C]
  000bc	0b000000	 bleq        NKDbgPrintfW

; 405  :     }
; 406  :     __D("CMEM memory block 1: phys start = 0x%lx, size = 0x%x\n",
; 407  :            attrs.phys_base, attrs.size);

  000c0	e59d2004	 ldr         r2, [sp, #4]
  000c4	e59d1000	 ldr         r1, [sp]
  000c8	e59f0078	 ldr         r0, [pc, #0x78]
  000cc	eb000000	 bl          NKDbgPrintfW

; 408  : 
; 409  :     __D("main: Testing heap allocation in block 0...\n");

  000d0	e59f006c	 ldr         r0, [pc, #0x6C]
  000d4	eb000000	 bl          NKDbgPrintfW

; 410  :     testHeap(size, 0);

  000d8	e3a01000	 mov         r1, #0
  000dc	e1a00005	 mov         r0, r5
  000e0	eb000000	 bl          testHeap

; 411  :     __D("main: Testing heap allocation in block 1...\n");

  000e4	e59f0054	 ldr         r0, [pc, #0x54]
  000e8	eb000000	 bl          NKDbgPrintfW

; 412  :     testHeap(size, 1);

  000ec	e3a01001	 mov         r1, #1
  000f0	e1a00005	 mov         r0, r5
  000f4	eb000000	 bl          testHeap

; 413  : 
; 414  :     __D("main: Testing heap allocation with cache flags in block 0...\n");

  000f8	e59f003c	 ldr         r0, [pc, #0x3C]
  000fc	eb000000	 bl          NKDbgPrintfW

; 415  :     testCache(size, 0);

  00100	e3a01000	 mov         r1, #0
  00104	e1a00005	 mov         r0, r5
  00108	eb000000	 bl          testCache

; 416  :     __D("main: Testing heap allocation with cache flags in block 0...\n");

  0010c	e59f0028	 ldr         r0, [pc, #0x28]
  00110	eb000000	 bl          NKDbgPrintfW

; 417  :     testCache(size, 1);

  00114	e3a01001	 mov         r1, #1
  00118	e1a00005	 mov         r0, r5
  0011c	eb000000	 bl          testCache

; 418  : 
; 419  :     if (CMEM_exit() < 0) {

  00120	eb000000	 bl          CMEM_exit
  00124	e3500000	 cmp         r0, #0

; 420  :         __D("Failed to finalize the CMEM module\n");

  00128	459f0008	 ldrmi       r0, [pc, #8]
  0012c	4b000000	 blmi        NKDbgPrintfW

; 421  :     }
; 422  : 
; 423  :     exit(EXIT_SUCCESS);

  00130	e3a00000	 mov         r0, #0
  00134	eb000000	 bl          exit
  00138		 |$LN17@main|
  00138		 |$LN18@main|
  00138	00000000	 DCD         |??_C@_1GA@PCBOKHKI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt@|
  0013c		 |$LN19@main|
  0013c	00000000	 DCD         |??_C@_1JE@BFDEAPHH@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@|
  00140		 |$LN20@main|
  00140	00000000	 DCD         |??_C@_1HC@CLDCADHL@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@|
  00144		 |$LN21@main|
  00144	00000000	 DCD         |??_C@_1HC@LAJHEPBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAm?$AAa?$AAi?$AAn?$AA?3?$AA?5?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAe?$AAa?$AAp?$AA?5?$AAa@|
  00148		 |$LN22@main|
  00148	00000000	 DCD         |??_C@_1IE@JFPDAKOB@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA1?$AA?3@|
  0014c		 |$LN23@main|
  0014c	00000000	 DCD         |??_C@_1HG@PMBGPOND@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@|
  00150		 |$LN24@main|
  00150	00000000	 DCD         |??_C@_1IE@DLPIFJHF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA0?$AA?3@|
  00154		 |$LN25@main|
  00154	00000000	 DCD         |??_C@_1HG@JJHBMFJF@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@|
  00158		 |$LN26@main|
  00158	00000000	 DCD         |??_C@_1EC@KKGKPOBE@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6@|
  0015c		 |$LN27@main|
  0015c	00000000	 DCD         |??_C@_1FK@JEJAOPHI@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAC@|
  00160		 |$LN28@main|
  00160	00000000	 DCD         |??_C@_1DO@DDGKLPOD@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?4?$AA?6?$AA?$AA@|
  00164		 |$LN29@main|
  00164	00000000	 DCD         |??_C@_1EO@EKHBALIP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@|
  00168		 |$LN30@main|
  00168	00000000	 DCD         |??_C@_1GK@EFKHFNKP@?$AAC?$AAM?$AAE?$AAM?$AA?5?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?3?$AA?5?$AAU?$AAs?$AAa?$AAg?$AAe?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DM?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf@|
  0016c		 |$LN31@main|
  0016c	00000000	 DCD         |ARGC|
  00170		 |$LN16@main|
  00170		 |$LN10@main|
  00170		 |$M36971|

			 ENDP  ; |main|

	END
